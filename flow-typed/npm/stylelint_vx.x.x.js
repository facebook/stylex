// flow-typed signature: 0aa8cb454630bd1fe9243ff22cb42ff3
// flow-typed version: <<STUB>>/stylelint_v^14.9.1/flow_v0.267.0

/**
 * This is an autogenerated libdef stub for:
 *
 *   'stylelint'
 *
 * Fill this stub out by replacing all the `any` types.
 *
 * Once filled out, we encourage you to share your work with the
 * community by sending a pull request to:
 * https://github.com/flowtype/flow-typed
 */

declare module 'stylelint' {
  declare module.exports: any;
}

/**
 * We include stubs for each file inside this npm package in case you need to
 * require those files directly. Feel free to delete any files that aren't
 * needed.
 */
declare module 'stylelint/bin/stylelint' {
  declare module.exports: any;
}

declare module 'stylelint/lib/assignDisabledRanges' {
  declare module.exports: any;
}

declare module 'stylelint/lib/augmentConfig' {
  declare module.exports: any;
}

declare module 'stylelint/lib/cli' {
  declare module.exports: any;
}

declare module 'stylelint/lib/createPartialStylelintResult' {
  declare module.exports: any;
}

declare module 'stylelint/lib/createPlugin' {
  declare module.exports: any;
}

declare module 'stylelint/lib/createStylelint' {
  declare module.exports: any;
}

declare module 'stylelint/lib/createStylelintResult' {
  declare module.exports: any;
}

declare module 'stylelint/lib/descriptionlessDisables' {
  declare module.exports: any;
}

declare module 'stylelint/lib/formatters/calcSeverityCounts' {
  declare module.exports: any;
}

declare module 'stylelint/lib/formatters/compactFormatter' {
  declare module.exports: any;
}

declare module 'stylelint/lib/formatters/githubFormatter' {
  declare module.exports: any;
}

declare module 'stylelint/lib/formatters' {
  declare module.exports: any;
}

declare module 'stylelint/lib/formatters/jsonFormatter' {
  declare module.exports: any;
}

declare module 'stylelint/lib/formatters/preprocessWarnings' {
  declare module.exports: any;
}

declare module 'stylelint/lib/formatters/stringFormatter' {
  declare module.exports: any;
}

declare module 'stylelint/lib/formatters/tapFormatter' {
  declare module.exports: any;
}

declare module 'stylelint/lib/formatters/terminalLink' {
  declare module.exports: any;
}

declare module 'stylelint/lib/formatters/unixFormatter' {
  declare module.exports: any;
}

declare module 'stylelint/lib/formatters/verboseFormatter' {
  declare module.exports: any;
}

declare module 'stylelint/lib/getConfigForFile' {
  declare module.exports: any;
}

declare module 'stylelint/lib/getPostcssResult' {
  declare module.exports: any;
}

declare module 'stylelint/lib' {
  declare module.exports: any;
}

declare module 'stylelint/lib/invalidScopeDisables' {
  declare module.exports: any;
}

declare module 'stylelint/lib/isPathIgnored' {
  declare module.exports: any;
}

declare module 'stylelint/lib/lintPostcssResult' {
  declare module.exports: any;
}

declare module 'stylelint/lib/lintSource' {
  declare module.exports: any;
}

declare module 'stylelint/lib/needlessDisables' {
  declare module.exports: any;
}

declare module 'stylelint/lib/normalizeAllRuleSettings' {
  declare module.exports: any;
}

declare module 'stylelint/lib/normalizeRuleSettings' {
  declare module.exports: any;
}

declare module 'stylelint/lib/postcssPlugin' {
  declare module.exports: any;
}

declare module 'stylelint/lib/prepareReturnValue' {
  declare module.exports: any;
}

declare module 'stylelint/lib/printConfig' {
  declare module.exports: any;
}

declare module 'stylelint/lib/reference/atKeywords' {
  declare module.exports: any;
}

declare module 'stylelint/lib/reference/functions' {
  declare module.exports: any;
}

declare module 'stylelint/lib/reference/keywords' {
  declare module.exports: any;
}

declare module 'stylelint/lib/reference/mediaFeatures' {
  declare module.exports: any;
}

declare module 'stylelint/lib/reference/properties' {
  declare module.exports: any;
}

declare module 'stylelint/lib/reference/selectors' {
  declare module.exports: any;
}

declare module 'stylelint/lib/reference/units' {
  declare module.exports: any;
}

declare module 'stylelint/lib/reportDisables' {
  declare module.exports: any;
}

declare module 'stylelint/lib/reportUnknownRuleNames' {
  declare module.exports: any;
}

declare module 'stylelint/lib/resolveConfig' {
  declare module.exports: any;
}

declare module 'stylelint/lib/resolveCustomFormatter' {
  declare module.exports: any;
}

declare module 'stylelint/lib/rules/alpha-value-notation' {
  declare module.exports: any;
}

declare module 'stylelint/lib/rules/annotation-no-unknown' {
  declare module.exports: any;
}

declare module 'stylelint/lib/rules/at-rule-allowed-list' {
  declare module.exports: any;
}

declare module 'stylelint/lib/rules/at-rule-disallowed-list' {
  declare module.exports: any;
}

declare module 'stylelint/lib/rules/at-rule-empty-line-before' {
  declare module.exports: any;
}

declare module 'stylelint/lib/rules/at-rule-name-case' {
  declare module.exports: any;
}

declare module 'stylelint/lib/rules/at-rule-name-newline-after' {
  declare module.exports: any;
}

declare module 'stylelint/lib/rules/at-rule-name-space-after' {
  declare module.exports: any;
}

declare module 'stylelint/lib/rules/at-rule-no-unknown' {
  declare module.exports: any;
}

declare module 'stylelint/lib/rules/at-rule-no-vendor-prefix' {
  declare module.exports: any;
}

declare module 'stylelint/lib/rules/at-rule-property-required-list' {
  declare module.exports: any;
}

declare module 'stylelint/lib/rules/at-rule-semicolon-newline-after' {
  declare module.exports: any;
}

declare module 'stylelint/lib/rules/at-rule-semicolon-space-before' {
  declare module.exports: any;
}

declare module 'stylelint/lib/rules/atRuleNameSpaceChecker' {
  declare module.exports: any;
}

declare module 'stylelint/lib/rules/block-closing-brace-empty-line-before' {
  declare module.exports: any;
}

declare module 'stylelint/lib/rules/block-closing-brace-newline-after' {
  declare module.exports: any;
}

declare module 'stylelint/lib/rules/block-closing-brace-newline-before' {
  declare module.exports: any;
}

declare module 'stylelint/lib/rules/block-closing-brace-space-after' {
  declare module.exports: any;
}

declare module 'stylelint/lib/rules/block-closing-brace-space-before' {
  declare module.exports: any;
}

declare module 'stylelint/lib/rules/block-no-empty' {
  declare module.exports: any;
}

declare module 'stylelint/lib/rules/block-opening-brace-newline-after' {
  declare module.exports: any;
}

declare module 'stylelint/lib/rules/block-opening-brace-newline-before' {
  declare module.exports: any;
}

declare module 'stylelint/lib/rules/block-opening-brace-space-after' {
  declare module.exports: any;
}

declare module 'stylelint/lib/rules/block-opening-brace-space-before' {
  declare module.exports: any;
}

declare module 'stylelint/lib/rules/color-function-notation' {
  declare module.exports: any;
}

declare module 'stylelint/lib/rules/color-hex-alpha' {
  declare module.exports: any;
}

declare module 'stylelint/lib/rules/color-hex-case' {
  declare module.exports: any;
}

declare module 'stylelint/lib/rules/color-hex-length' {
  declare module.exports: any;
}

declare module 'stylelint/lib/rules/color-named/colordUtils' {
  declare module.exports: any;
}

declare module 'stylelint/lib/rules/color-named' {
  declare module.exports: any;
}

declare module 'stylelint/lib/rules/color-no-hex' {
  declare module.exports: any;
}

declare module 'stylelint/lib/rules/color-no-invalid-hex' {
  declare module.exports: any;
}

declare module 'stylelint/lib/rules/comment-empty-line-before' {
  declare module.exports: any;
}

declare module 'stylelint/lib/rules/comment-no-empty' {
  declare module.exports: any;
}

declare module 'stylelint/lib/rules/comment-pattern' {
  declare module.exports: any;
}

declare module 'stylelint/lib/rules/comment-whitespace-inside' {
  declare module.exports: any;
}

declare module 'stylelint/lib/rules/comment-word-disallowed-list' {
  declare module.exports: any;
}

declare module 'stylelint/lib/rules/custom-media-pattern' {
  declare module.exports: any;
}

declare module 'stylelint/lib/rules/custom-property-empty-line-before' {
  declare module.exports: any;
}

declare module 'stylelint/lib/rules/custom-property-no-missing-var-function' {
  declare module.exports: any;
}

declare module 'stylelint/lib/rules/custom-property-pattern' {
  declare module.exports: any;
}

declare module 'stylelint/lib/rules/declaration-bang-space-after' {
  declare module.exports: any;
}

declare module 'stylelint/lib/rules/declaration-bang-space-before' {
  declare module.exports: any;
}

declare module 'stylelint/lib/rules/declaration-block-no-duplicate-custom-properties' {
  declare module.exports: any;
}

declare module 'stylelint/lib/rules/declaration-block-no-duplicate-properties' {
  declare module.exports: any;
}

declare module 'stylelint/lib/rules/declaration-block-no-redundant-longhand-properties' {
  declare module.exports: any;
}

declare module 'stylelint/lib/rules/declaration-block-no-shorthand-property-overrides' {
  declare module.exports: any;
}

declare module 'stylelint/lib/rules/declaration-block-semicolon-newline-after' {
  declare module.exports: any;
}

declare module 'stylelint/lib/rules/declaration-block-semicolon-newline-before' {
  declare module.exports: any;
}

declare module 'stylelint/lib/rules/declaration-block-semicolon-space-after' {
  declare module.exports: any;
}

declare module 'stylelint/lib/rules/declaration-block-semicolon-space-before' {
  declare module.exports: any;
}

declare module 'stylelint/lib/rules/declaration-block-single-line-max-declarations' {
  declare module.exports: any;
}

declare module 'stylelint/lib/rules/declaration-block-trailing-semicolon' {
  declare module.exports: any;
}

declare module 'stylelint/lib/rules/declaration-colon-newline-after' {
  declare module.exports: any;
}

declare module 'stylelint/lib/rules/declaration-colon-space-after' {
  declare module.exports: any;
}

declare module 'stylelint/lib/rules/declaration-colon-space-before' {
  declare module.exports: any;
}

declare module 'stylelint/lib/rules/declaration-empty-line-before' {
  declare module.exports: any;
}

declare module 'stylelint/lib/rules/declaration-no-important' {
  declare module.exports: any;
}

declare module 'stylelint/lib/rules/declaration-property-max-values' {
  declare module.exports: any;
}

declare module 'stylelint/lib/rules/declaration-property-unit-allowed-list' {
  declare module.exports: any;
}

declare module 'stylelint/lib/rules/declaration-property-unit-disallowed-list' {
  declare module.exports: any;
}

declare module 'stylelint/lib/rules/declaration-property-value-allowed-list' {
  declare module.exports: any;
}

declare module 'stylelint/lib/rules/declaration-property-value-disallowed-list' {
  declare module.exports: any;
}

declare module 'stylelint/lib/rules/declarationBangSpaceChecker' {
  declare module.exports: any;
}

declare module 'stylelint/lib/rules/declarationColonSpaceChecker' {
  declare module.exports: any;
}

declare module 'stylelint/lib/rules/findMediaOperator' {
  declare module.exports: any;
}

declare module 'stylelint/lib/rules/font-family-name-quotes' {
  declare module.exports: any;
}

declare module 'stylelint/lib/rules/font-family-no-duplicate-names' {
  declare module.exports: any;
}

declare module 'stylelint/lib/rules/font-family-no-missing-generic-family-keyword' {
  declare module.exports: any;
}

declare module 'stylelint/lib/rules/font-weight-notation' {
  declare module.exports: any;
}

declare module 'stylelint/lib/rules/function-allowed-list' {
  declare module.exports: any;
}

declare module 'stylelint/lib/rules/function-calc-no-unspaced-operator' {
  declare module.exports: any;
}

declare module 'stylelint/lib/rules/function-comma-newline-after' {
  declare module.exports: any;
}

declare module 'stylelint/lib/rules/function-comma-newline-before' {
  declare module.exports: any;
}

declare module 'stylelint/lib/rules/function-comma-space-after' {
  declare module.exports: any;
}

declare module 'stylelint/lib/rules/function-comma-space-before' {
  declare module.exports: any;
}

declare module 'stylelint/lib/rules/function-disallowed-list' {
  declare module.exports: any;
}

declare module 'stylelint/lib/rules/function-linear-gradient-no-nonstandard-direction' {
  declare module.exports: any;
}

declare module 'stylelint/lib/rules/function-max-empty-lines' {
  declare module.exports: any;
}

declare module 'stylelint/lib/rules/function-name-case' {
  declare module.exports: any;
}

declare module 'stylelint/lib/rules/function-no-unknown' {
  declare module.exports: any;
}

declare module 'stylelint/lib/rules/function-parentheses-newline-inside' {
  declare module.exports: any;
}

declare module 'stylelint/lib/rules/function-parentheses-space-inside' {
  declare module.exports: any;
}

declare module 'stylelint/lib/rules/function-url-no-scheme-relative' {
  declare module.exports: any;
}

declare module 'stylelint/lib/rules/function-url-quotes' {
  declare module.exports: any;
}

declare module 'stylelint/lib/rules/function-url-scheme-allowed-list' {
  declare module.exports: any;
}

declare module 'stylelint/lib/rules/function-url-scheme-disallowed-list' {
  declare module.exports: any;
}

declare module 'stylelint/lib/rules/function-whitespace-after' {
  declare module.exports: any;
}

declare module 'stylelint/lib/rules/functionCommaSpaceChecker' {
  declare module.exports: any;
}

declare module 'stylelint/lib/rules/functionCommaSpaceFix' {
  declare module.exports: any;
}

declare module 'stylelint/lib/rules/hue-degree-notation' {
  declare module.exports: any;
}

declare module 'stylelint/lib/rules/import-notation' {
  declare module.exports: any;
}

declare module 'stylelint/lib/rules/indentation' {
  declare module.exports: any;
}

declare module 'stylelint/lib/rules' {
  declare module.exports: any;
}

declare module 'stylelint/lib/rules/keyframe-block-no-duplicate-selectors' {
  declare module.exports: any;
}

declare module 'stylelint/lib/rules/keyframe-declaration-no-important' {
  declare module.exports: any;
}

declare module 'stylelint/lib/rules/keyframe-selector-notation' {
  declare module.exports: any;
}

declare module 'stylelint/lib/rules/keyframes-name-pattern' {
  declare module.exports: any;
}

declare module 'stylelint/lib/rules/length-zero-no-unit' {
  declare module.exports: any;
}

declare module 'stylelint/lib/rules/linebreaks' {
  declare module.exports: any;
}

declare module 'stylelint/lib/rules/max-empty-lines' {
  declare module.exports: any;
}

declare module 'stylelint/lib/rules/max-line-length' {
  declare module.exports: any;
}

declare module 'stylelint/lib/rules/max-nesting-depth' {
  declare module.exports: any;
}

declare module 'stylelint/lib/rules/media-feature-colon-space-after' {
  declare module.exports: any;
}

declare module 'stylelint/lib/rules/media-feature-colon-space-before' {
  declare module.exports: any;
}

declare module 'stylelint/lib/rules/media-feature-name-allowed-list' {
  declare module.exports: any;
}

declare module 'stylelint/lib/rules/media-feature-name-case' {
  declare module.exports: any;
}

declare module 'stylelint/lib/rules/media-feature-name-disallowed-list' {
  declare module.exports: any;
}

declare module 'stylelint/lib/rules/media-feature-name-no-unknown' {
  declare module.exports: any;
}

declare module 'stylelint/lib/rules/media-feature-name-no-vendor-prefix' {
  declare module.exports: any;
}

declare module 'stylelint/lib/rules/media-feature-name-value-allowed-list' {
  declare module.exports: any;
}

declare module 'stylelint/lib/rules/media-feature-parentheses-space-inside' {
  declare module.exports: any;
}

declare module 'stylelint/lib/rules/media-feature-range-notation' {
  declare module.exports: any;
}

declare module 'stylelint/lib/rules/media-feature-range-operator-space-after' {
  declare module.exports: any;
}

declare module 'stylelint/lib/rules/media-feature-range-operator-space-before' {
  declare module.exports: any;
}

declare module 'stylelint/lib/rules/media-query-list-comma-newline-after' {
  declare module.exports: any;
}

declare module 'stylelint/lib/rules/media-query-list-comma-newline-before' {
  declare module.exports: any;
}

declare module 'stylelint/lib/rules/media-query-list-comma-space-after' {
  declare module.exports: any;
}

declare module 'stylelint/lib/rules/media-query-list-comma-space-before' {
  declare module.exports: any;
}

declare module 'stylelint/lib/rules/mediaFeatureColonSpaceChecker' {
  declare module.exports: any;
}

declare module 'stylelint/lib/rules/mediaQueryListCommaWhitespaceChecker' {
  declare module.exports: any;
}

declare module 'stylelint/lib/rules/named-grid-areas-no-invalid' {
  declare module.exports: any;
}

declare module 'stylelint/lib/rules/named-grid-areas-no-invalid/utils/findNotContiguousOrRectangular' {
  declare module.exports: any;
}

declare module 'stylelint/lib/rules/no-descending-specificity' {
  declare module.exports: any;
}

declare module 'stylelint/lib/rules/no-duplicate-at-import-rules' {
  declare module.exports: any;
}

declare module 'stylelint/lib/rules/no-duplicate-selectors' {
  declare module.exports: any;
}

declare module 'stylelint/lib/rules/no-empty-first-line' {
  declare module.exports: any;
}

declare module 'stylelint/lib/rules/no-empty-source' {
  declare module.exports: any;
}

declare module 'stylelint/lib/rules/no-eol-whitespace' {
  declare module.exports: any;
}

declare module 'stylelint/lib/rules/no-extra-semicolons' {
  declare module.exports: any;
}

declare module 'stylelint/lib/rules/no-invalid-double-slash-comments' {
  declare module.exports: any;
}

declare module 'stylelint/lib/rules/no-invalid-position-at-import-rule' {
  declare module.exports: any;
}

declare module 'stylelint/lib/rules/no-irregular-whitespace' {
  declare module.exports: any;
}

declare module 'stylelint/lib/rules/no-missing-end-of-source-newline' {
  declare module.exports: any;
}

declare module 'stylelint/lib/rules/no-unknown-animations' {
  declare module.exports: any;
}

declare module 'stylelint/lib/rules/number-leading-zero' {
  declare module.exports: any;
}

declare module 'stylelint/lib/rules/number-max-precision' {
  declare module.exports: any;
}

declare module 'stylelint/lib/rules/number-no-trailing-zeros' {
  declare module.exports: any;
}

declare module 'stylelint/lib/rules/property-allowed-list' {
  declare module.exports: any;
}

declare module 'stylelint/lib/rules/property-case' {
  declare module.exports: any;
}

declare module 'stylelint/lib/rules/property-disallowed-list' {
  declare module.exports: any;
}

declare module 'stylelint/lib/rules/property-no-unknown' {
  declare module.exports: any;
}

declare module 'stylelint/lib/rules/property-no-vendor-prefix' {
  declare module.exports: any;
}

declare module 'stylelint/lib/rules/rangeContextNodeParser' {
  declare module.exports: any;
}

declare module 'stylelint/lib/rules/rule-empty-line-before' {
  declare module.exports: any;
}

declare module 'stylelint/lib/rules/rule-selector-property-disallowed-list' {
  declare module.exports: any;
}

declare module 'stylelint/lib/rules/selector-attribute-brackets-space-inside' {
  declare module.exports: any;
}

declare module 'stylelint/lib/rules/selector-attribute-name-disallowed-list' {
  declare module.exports: any;
}

declare module 'stylelint/lib/rules/selector-attribute-operator-allowed-list' {
  declare module.exports: any;
}

declare module 'stylelint/lib/rules/selector-attribute-operator-disallowed-list' {
  declare module.exports: any;
}

declare module 'stylelint/lib/rules/selector-attribute-operator-space-after' {
  declare module.exports: any;
}

declare module 'stylelint/lib/rules/selector-attribute-operator-space-before' {
  declare module.exports: any;
}

declare module 'stylelint/lib/rules/selector-attribute-quotes' {
  declare module.exports: any;
}

declare module 'stylelint/lib/rules/selector-class-pattern' {
  declare module.exports: any;
}

declare module 'stylelint/lib/rules/selector-combinator-allowed-list' {
  declare module.exports: any;
}

declare module 'stylelint/lib/rules/selector-combinator-disallowed-list' {
  declare module.exports: any;
}

declare module 'stylelint/lib/rules/selector-combinator-space-after' {
  declare module.exports: any;
}

declare module 'stylelint/lib/rules/selector-combinator-space-before' {
  declare module.exports: any;
}

declare module 'stylelint/lib/rules/selector-descendant-combinator-no-non-space' {
  declare module.exports: any;
}

declare module 'stylelint/lib/rules/selector-disallowed-list' {
  declare module.exports: any;
}

declare module 'stylelint/lib/rules/selector-id-pattern' {
  declare module.exports: any;
}

declare module 'stylelint/lib/rules/selector-list-comma-newline-after' {
  declare module.exports: any;
}

declare module 'stylelint/lib/rules/selector-list-comma-newline-before' {
  declare module.exports: any;
}

declare module 'stylelint/lib/rules/selector-list-comma-space-after' {
  declare module.exports: any;
}

declare module 'stylelint/lib/rules/selector-list-comma-space-before' {
  declare module.exports: any;
}

declare module 'stylelint/lib/rules/selector-max-attribute' {
  declare module.exports: any;
}

declare module 'stylelint/lib/rules/selector-max-class' {
  declare module.exports: any;
}

declare module 'stylelint/lib/rules/selector-max-combinators' {
  declare module.exports: any;
}

declare module 'stylelint/lib/rules/selector-max-compound-selectors' {
  declare module.exports: any;
}

declare module 'stylelint/lib/rules/selector-max-empty-lines' {
  declare module.exports: any;
}

declare module 'stylelint/lib/rules/selector-max-id' {
  declare module.exports: any;
}

declare module 'stylelint/lib/rules/selector-max-pseudo-class' {
  declare module.exports: any;
}

declare module 'stylelint/lib/rules/selector-max-specificity' {
  declare module.exports: any;
}

declare module 'stylelint/lib/rules/selector-max-type' {
  declare module.exports: any;
}

declare module 'stylelint/lib/rules/selector-max-universal' {
  declare module.exports: any;
}

declare module 'stylelint/lib/rules/selector-nested-pattern' {
  declare module.exports: any;
}

declare module 'stylelint/lib/rules/selector-no-qualifying-type' {
  declare module.exports: any;
}

declare module 'stylelint/lib/rules/selector-no-vendor-prefix' {
  declare module.exports: any;
}

declare module 'stylelint/lib/rules/selector-not-notation' {
  declare module.exports: any;
}

declare module 'stylelint/lib/rules/selector-pseudo-class-allowed-list' {
  declare module.exports: any;
}

declare module 'stylelint/lib/rules/selector-pseudo-class-case' {
  declare module.exports: any;
}

declare module 'stylelint/lib/rules/selector-pseudo-class-disallowed-list' {
  declare module.exports: any;
}

declare module 'stylelint/lib/rules/selector-pseudo-class-no-unknown' {
  declare module.exports: any;
}

declare module 'stylelint/lib/rules/selector-pseudo-class-parentheses-space-inside' {
  declare module.exports: any;
}

declare module 'stylelint/lib/rules/selector-pseudo-element-allowed-list' {
  declare module.exports: any;
}

declare module 'stylelint/lib/rules/selector-pseudo-element-case' {
  declare module.exports: any;
}

declare module 'stylelint/lib/rules/selector-pseudo-element-colon-notation' {
  declare module.exports: any;
}

declare module 'stylelint/lib/rules/selector-pseudo-element-disallowed-list' {
  declare module.exports: any;
}

declare module 'stylelint/lib/rules/selector-pseudo-element-no-unknown' {
  declare module.exports: any;
}

declare module 'stylelint/lib/rules/selector-type-case' {
  declare module.exports: any;
}

declare module 'stylelint/lib/rules/selector-type-no-unknown' {
  declare module.exports: any;
}

declare module 'stylelint/lib/rules/selectorAttributeOperatorSpaceChecker' {
  declare module.exports: any;
}

declare module 'stylelint/lib/rules/selectorCombinatorSpaceChecker' {
  declare module.exports: any;
}

declare module 'stylelint/lib/rules/selectorListCommaWhitespaceChecker' {
  declare module.exports: any;
}

declare module 'stylelint/lib/rules/shorthand-property-no-redundant-values' {
  declare module.exports: any;
}

declare module 'stylelint/lib/rules/string-no-newline' {
  declare module.exports: any;
}

declare module 'stylelint/lib/rules/string-quotes' {
  declare module.exports: any;
}

declare module 'stylelint/lib/rules/time-min-milliseconds' {
  declare module.exports: any;
}

declare module 'stylelint/lib/rules/unicode-bom' {
  declare module.exports: any;
}

declare module 'stylelint/lib/rules/unit-allowed-list' {
  declare module.exports: any;
}

declare module 'stylelint/lib/rules/unit-case' {
  declare module.exports: any;
}

declare module 'stylelint/lib/rules/unit-disallowed-list' {
  declare module.exports: any;
}

declare module 'stylelint/lib/rules/unit-no-unknown' {
  declare module.exports: any;
}

declare module 'stylelint/lib/rules/value-keyword-case' {
  declare module.exports: any;
}

declare module 'stylelint/lib/rules/value-list-comma-newline-after' {
  declare module.exports: any;
}

declare module 'stylelint/lib/rules/value-list-comma-newline-before' {
  declare module.exports: any;
}

declare module 'stylelint/lib/rules/value-list-comma-space-after' {
  declare module.exports: any;
}

declare module 'stylelint/lib/rules/value-list-comma-space-before' {
  declare module.exports: any;
}

declare module 'stylelint/lib/rules/value-list-max-empty-lines' {
  declare module.exports: any;
}

declare module 'stylelint/lib/rules/value-no-vendor-prefix' {
  declare module.exports: any;
}

declare module 'stylelint/lib/rules/valueListCommaWhitespaceChecker' {
  declare module.exports: any;
}

declare module 'stylelint/lib/standalone' {
  declare module.exports: any;
}

declare module 'stylelint/lib/utils/addEmptyLineAfter' {
  declare module.exports: any;
}

declare module 'stylelint/lib/utils/addEmptyLineBefore' {
  declare module.exports: any;
}

declare module 'stylelint/lib/utils/allFilesIgnoredError' {
  declare module.exports: any;
}

declare module 'stylelint/lib/utils/arrayEqual' {
  declare module.exports: any;
}

declare module 'stylelint/lib/utils/atRuleParamIndex' {
  declare module.exports: any;
}

declare module 'stylelint/lib/utils/beforeBlockString' {
  declare module.exports: any;
}

declare module 'stylelint/lib/utils/blockString' {
  declare module.exports: any;
}

declare module 'stylelint/lib/utils/blurComments' {
  declare module.exports: any;
}

declare module 'stylelint/lib/utils/blurFunctionArguments' {
  declare module.exports: any;
}

declare module 'stylelint/lib/utils/blurInterpolation' {
  declare module.exports: any;
}

declare module 'stylelint/lib/utils/checkAgainstRule' {
  declare module.exports: any;
}

declare module 'stylelint/lib/utils/checkInvalidCLIOptions' {
  declare module.exports: any;
}

declare module 'stylelint/lib/utils/configurationError' {
  declare module.exports: any;
}

declare module 'stylelint/lib/utils/containsString' {
  declare module.exports: any;
}

declare module 'stylelint/lib/utils/declarationValueIndex' {
  declare module.exports: any;
}

declare module 'stylelint/lib/utils/eachDeclarationBlock' {
  declare module.exports: any;
}

declare module 'stylelint/lib/utils/FileCache' {
  declare module.exports: any;
}

declare module 'stylelint/lib/utils/filterFilePaths' {
  declare module.exports: any;
}

declare module 'stylelint/lib/utils/findAnimationName' {
  declare module.exports: any;
}

declare module 'stylelint/lib/utils/findAtRuleContext' {
  declare module.exports: any;
}

declare module 'stylelint/lib/utils/findFontFamily' {
  declare module.exports: any;
}

declare module 'stylelint/lib/utils/findListStyleType' {
  declare module.exports: any;
}

declare module 'stylelint/lib/utils/flattenArray' {
  declare module.exports: any;
}

declare module 'stylelint/lib/utils/functionArgumentsSearch' {
  declare module.exports: any;
}

declare module 'stylelint/lib/utils/getAtRuleParams' {
  declare module.exports: any;
}

declare module 'stylelint/lib/utils/getCacheFile' {
  declare module.exports: any;
}

declare module 'stylelint/lib/utils/getDeclarationValue' {
  declare module.exports: any;
}

declare module 'stylelint/lib/utils/getDimension' {
  declare module.exports: any;
}

declare module 'stylelint/lib/utils/getFileIgnorer' {
  declare module.exports: any;
}

declare module 'stylelint/lib/utils/getFormatterOptionsText' {
  declare module.exports: any;
}

declare module 'stylelint/lib/utils/getImportantPosition' {
  declare module.exports: any;
}

declare module 'stylelint/lib/utils/getModulePath' {
  declare module.exports: any;
}

declare module 'stylelint/lib/utils/getNextNonSharedLineCommentNode' {
  declare module.exports: any;
}

declare module 'stylelint/lib/utils/getOsEol' {
  declare module.exports: any;
}

declare module 'stylelint/lib/utils/getPreviousNonSharedLineCommentNode' {
  declare module.exports: any;
}

declare module 'stylelint/lib/utils/getRuleSelector' {
  declare module.exports: any;
}

declare module 'stylelint/lib/utils/getSchemeFromUrl' {
  declare module.exports: any;
}

declare module 'stylelint/lib/utils/getStdin' {
  declare module.exports: any;
}

declare module 'stylelint/lib/utils/getStylelintRule' {
  declare module.exports: any;
}

declare module 'stylelint/lib/utils/hasBlock' {
  declare module.exports: any;
}

declare module 'stylelint/lib/utils/hasEmptyBlock' {
  declare module.exports: any;
}

declare module 'stylelint/lib/utils/hasEmptyLine' {
  declare module.exports: any;
}

declare module 'stylelint/lib/utils/hash' {
  declare module.exports: any;
}

declare module 'stylelint/lib/utils/hasInterpolation' {
  declare module.exports: any;
}

declare module 'stylelint/lib/utils/hasLessInterpolation' {
  declare module.exports: any;
}

declare module 'stylelint/lib/utils/hasPsvInterpolation' {
  declare module.exports: any;
}

declare module 'stylelint/lib/utils/hasScssInterpolation' {
  declare module.exports: any;
}

declare module 'stylelint/lib/utils/hasTplInterpolation' {
  declare module.exports: any;
}

declare module 'stylelint/lib/utils/isAfterComment' {
  declare module.exports: any;
}

declare module 'stylelint/lib/utils/isAfterSingleLineComment' {
  declare module.exports: any;
}

declare module 'stylelint/lib/utils/isAfterStandardPropertyDeclaration' {
  declare module.exports: any;
}

declare module 'stylelint/lib/utils/isAutoprefixable' {
  declare module.exports: any;
}

declare module 'stylelint/lib/utils/isBlocklessAtRuleAfterBlocklessAtRule' {
  declare module.exports: any;
}

declare module 'stylelint/lib/utils/isBlocklessAtRuleAfterSameNameBlocklessAtRule' {
  declare module.exports: any;
}

declare module 'stylelint/lib/utils/isContextFunctionalPseudoClass' {
  declare module.exports: any;
}

declare module 'stylelint/lib/utils/isCounterIncrementCustomIdentValue' {
  declare module.exports: any;
}

declare module 'stylelint/lib/utils/isCounterResetCustomIdentValue' {
  declare module.exports: any;
}

declare module 'stylelint/lib/utils/isCustomElement' {
  declare module.exports: any;
}

declare module 'stylelint/lib/utils/isCustomFunction' {
  declare module.exports: any;
}

declare module 'stylelint/lib/utils/isCustomMediaQuery' {
  declare module.exports: any;
}

declare module 'stylelint/lib/utils/isCustomProperty' {
  declare module.exports: any;
}

declare module 'stylelint/lib/utils/isCustomSelector' {
  declare module.exports: any;
}

declare module 'stylelint/lib/utils/isFirstNested' {
  declare module.exports: any;
}

declare module 'stylelint/lib/utils/isFirstNodeOfRoot' {
  declare module.exports: any;
}

declare module 'stylelint/lib/utils/isKeyframeRule' {
  declare module.exports: any;
}

declare module 'stylelint/lib/utils/isKeyframeSelector' {
  declare module.exports: any;
}

declare module 'stylelint/lib/utils/isLessVariable' {
  declare module.exports: any;
}

declare module 'stylelint/lib/utils/isMathFunction' {
  declare module.exports: any;
}

declare module 'stylelint/lib/utils/isNonNegativeInteger' {
  declare module.exports: any;
}

declare module 'stylelint/lib/utils/isNumbery' {
  declare module.exports: any;
}

declare module 'stylelint/lib/utils/isOnlyWhitespace' {
  declare module.exports: any;
}

declare module 'stylelint/lib/utils/isPathNotFoundError' {
  declare module.exports: any;
}

declare module 'stylelint/lib/utils/isRangeContextMediaFeature' {
  declare module.exports: any;
}

declare module 'stylelint/lib/utils/isScssVariable' {
  declare module.exports: any;
}

declare module 'stylelint/lib/utils/isSharedLineComment' {
  declare module.exports: any;
}

declare module 'stylelint/lib/utils/isSingleLineString' {
  declare module.exports: any;
}

declare module 'stylelint/lib/utils/isStandardSyntaxAtRule' {
  declare module.exports: any;
}

declare module 'stylelint/lib/utils/isStandardSyntaxColorFunction' {
  declare module.exports: any;
}

declare module 'stylelint/lib/utils/isStandardSyntaxCombinator' {
  declare module.exports: any;
}

declare module 'stylelint/lib/utils/isStandardSyntaxComment' {
  declare module.exports: any;
}

declare module 'stylelint/lib/utils/isStandardSyntaxDeclaration' {
  declare module.exports: any;
}

declare module 'stylelint/lib/utils/isStandardSyntaxFunction' {
  declare module.exports: any;
}

declare module 'stylelint/lib/utils/isStandardSyntaxHexColor' {
  declare module.exports: any;
}

declare module 'stylelint/lib/utils/isStandardSyntaxKeyframesName' {
  declare module.exports: any;
}

declare module 'stylelint/lib/utils/isStandardSyntaxMathFunction' {
  declare module.exports: any;
}

declare module 'stylelint/lib/utils/isStandardSyntaxMediaFeature' {
  declare module.exports: any;
}

declare module 'stylelint/lib/utils/isStandardSyntaxMediaFeatureName' {
  declare module.exports: any;
}

declare module 'stylelint/lib/utils/isStandardSyntaxProperty' {
  declare module.exports: any;
}

declare module 'stylelint/lib/utils/isStandardSyntaxRule' {
  declare module.exports: any;
}

declare module 'stylelint/lib/utils/isStandardSyntaxSelector' {
  declare module.exports: any;
}

declare module 'stylelint/lib/utils/isStandardSyntaxTypeSelector' {
  declare module.exports: any;
}

declare module 'stylelint/lib/utils/isStandardSyntaxUrl' {
  declare module.exports: any;
}

declare module 'stylelint/lib/utils/isStandardSyntaxValue' {
  declare module.exports: any;
}

declare module 'stylelint/lib/utils/isValidFontSize' {
  declare module.exports: any;
}

declare module 'stylelint/lib/utils/isValidHex' {
  declare module.exports: any;
}

declare module 'stylelint/lib/utils/isVariable' {
  declare module.exports: any;
}

declare module 'stylelint/lib/utils/isWhitespace' {
  declare module.exports: any;
}

declare module 'stylelint/lib/utils/matchesStringOrRegExp' {
  declare module.exports: any;
}

declare module 'stylelint/lib/utils/nextNonCommentNode' {
  declare module.exports: any;
}

declare module 'stylelint/lib/utils/nodeContextLookup' {
  declare module.exports: any;
}

declare module 'stylelint/lib/utils/noFilesFoundError' {
  declare module.exports: any;
}

declare module 'stylelint/lib/utils/optionsMatches' {
  declare module.exports: any;
}

declare module 'stylelint/lib/utils/parseSelector' {
  declare module.exports: any;
}

declare module 'stylelint/lib/utils/pluralize' {
  declare module.exports: any;
}

declare module 'stylelint/lib/utils/putIfAbsent' {
  declare module.exports: any;
}

declare module 'stylelint/lib/utils/rawNodeString' {
  declare module.exports: any;
}

declare module 'stylelint/lib/utils/removeEmptyLinesAfter' {
  declare module.exports: any;
}

declare module 'stylelint/lib/utils/removeEmptyLinesBefore' {
  declare module.exports: any;
}

declare module 'stylelint/lib/utils/report' {
  declare module.exports: any;
}

declare module 'stylelint/lib/utils/ruleMessages' {
  declare module.exports: any;
}

declare module 'stylelint/lib/utils/setAtRuleParams' {
  declare module.exports: any;
}

declare module 'stylelint/lib/utils/setDeclarationValue' {
  declare module.exports: any;
}

declare module 'stylelint/lib/utils/stylelintCommand' {
  declare module.exports: any;
}

declare module 'stylelint/lib/utils/transformSelector' {
  declare module.exports: any;
}

declare module 'stylelint/lib/utils/typeGuards' {
  declare module.exports: any;
}

declare module 'stylelint/lib/utils/uniteSets' {
  declare module.exports: any;
}

declare module 'stylelint/lib/utils/validateObjectWithArrayProps' {
  declare module.exports: any;
}

declare module 'stylelint/lib/utils/validateObjectWithProps' {
  declare module.exports: any;
}

declare module 'stylelint/lib/utils/validateOptions' {
  declare module.exports: any;
}

declare module 'stylelint/lib/utils/validateTypes' {
  declare module.exports: any;
}

declare module 'stylelint/lib/utils/vendor' {
  declare module.exports: any;
}

declare module 'stylelint/lib/utils/whitespaceChecker' {
  declare module.exports: any;
}

declare module 'stylelint/lib/validateDisableSettings' {
  declare module.exports: any;
}

declare module 'stylelint/lib/writeOutputFile' {
  declare module.exports: any;
}

// Filename aliases
declare module 'stylelint/bin/stylelint.js' {
  declare module.exports: $Exports<'stylelint/bin/stylelint'>;
}
declare module 'stylelint/lib/assignDisabledRanges.js' {
  declare module.exports: $Exports<'stylelint/lib/assignDisabledRanges'>;
}
declare module 'stylelint/lib/augmentConfig.js' {
  declare module.exports: $Exports<'stylelint/lib/augmentConfig'>;
}
declare module 'stylelint/lib/cli.js' {
  declare module.exports: $Exports<'stylelint/lib/cli'>;
}
declare module 'stylelint/lib/createPartialStylelintResult.js' {
  declare module.exports: $Exports<'stylelint/lib/createPartialStylelintResult'>;
}
declare module 'stylelint/lib/createPlugin.js' {
  declare module.exports: $Exports<'stylelint/lib/createPlugin'>;
}
declare module 'stylelint/lib/createStylelint.js' {
  declare module.exports: $Exports<'stylelint/lib/createStylelint'>;
}
declare module 'stylelint/lib/createStylelintResult.js' {
  declare module.exports: $Exports<'stylelint/lib/createStylelintResult'>;
}
declare module 'stylelint/lib/descriptionlessDisables.js' {
  declare module.exports: $Exports<'stylelint/lib/descriptionlessDisables'>;
}
declare module 'stylelint/lib/formatters/calcSeverityCounts.js' {
  declare module.exports: $Exports<'stylelint/lib/formatters/calcSeverityCounts'>;
}
declare module 'stylelint/lib/formatters/compactFormatter.js' {
  declare module.exports: $Exports<'stylelint/lib/formatters/compactFormatter'>;
}
declare module 'stylelint/lib/formatters/githubFormatter.js' {
  declare module.exports: $Exports<'stylelint/lib/formatters/githubFormatter'>;
}
declare module 'stylelint/lib/formatters/index' {
  declare module.exports: $Exports<'stylelint/lib/formatters'>;
}
declare module 'stylelint/lib/formatters/index.js' {
  declare module.exports: $Exports<'stylelint/lib/formatters'>;
}
declare module 'stylelint/lib/formatters/jsonFormatter.js' {
  declare module.exports: $Exports<'stylelint/lib/formatters/jsonFormatter'>;
}
declare module 'stylelint/lib/formatters/preprocessWarnings.js' {
  declare module.exports: $Exports<'stylelint/lib/formatters/preprocessWarnings'>;
}
declare module 'stylelint/lib/formatters/stringFormatter.js' {
  declare module.exports: $Exports<'stylelint/lib/formatters/stringFormatter'>;
}
declare module 'stylelint/lib/formatters/tapFormatter.js' {
  declare module.exports: $Exports<'stylelint/lib/formatters/tapFormatter'>;
}
declare module 'stylelint/lib/formatters/terminalLink.js' {
  declare module.exports: $Exports<'stylelint/lib/formatters/terminalLink'>;
}
declare module 'stylelint/lib/formatters/unixFormatter.js' {
  declare module.exports: $Exports<'stylelint/lib/formatters/unixFormatter'>;
}
declare module 'stylelint/lib/formatters/verboseFormatter.js' {
  declare module.exports: $Exports<'stylelint/lib/formatters/verboseFormatter'>;
}
declare module 'stylelint/lib/getConfigForFile.js' {
  declare module.exports: $Exports<'stylelint/lib/getConfigForFile'>;
}
declare module 'stylelint/lib/getPostcssResult.js' {
  declare module.exports: $Exports<'stylelint/lib/getPostcssResult'>;
}
declare module 'stylelint/lib/index' {
  declare module.exports: $Exports<'stylelint/lib'>;
}
declare module 'stylelint/lib/index.js' {
  declare module.exports: $Exports<'stylelint/lib'>;
}
declare module 'stylelint/lib/invalidScopeDisables.js' {
  declare module.exports: $Exports<'stylelint/lib/invalidScopeDisables'>;
}
declare module 'stylelint/lib/isPathIgnored.js' {
  declare module.exports: $Exports<'stylelint/lib/isPathIgnored'>;
}
declare module 'stylelint/lib/lintPostcssResult.js' {
  declare module.exports: $Exports<'stylelint/lib/lintPostcssResult'>;
}
declare module 'stylelint/lib/lintSource.js' {
  declare module.exports: $Exports<'stylelint/lib/lintSource'>;
}
declare module 'stylelint/lib/needlessDisables.js' {
  declare module.exports: $Exports<'stylelint/lib/needlessDisables'>;
}
declare module 'stylelint/lib/normalizeAllRuleSettings.js' {
  declare module.exports: $Exports<'stylelint/lib/normalizeAllRuleSettings'>;
}
declare module 'stylelint/lib/normalizeRuleSettings.js' {
  declare module.exports: $Exports<'stylelint/lib/normalizeRuleSettings'>;
}
declare module 'stylelint/lib/postcssPlugin.js' {
  declare module.exports: $Exports<'stylelint/lib/postcssPlugin'>;
}
declare module 'stylelint/lib/prepareReturnValue.js' {
  declare module.exports: $Exports<'stylelint/lib/prepareReturnValue'>;
}
declare module 'stylelint/lib/printConfig.js' {
  declare module.exports: $Exports<'stylelint/lib/printConfig'>;
}
declare module 'stylelint/lib/reference/atKeywords.js' {
  declare module.exports: $Exports<'stylelint/lib/reference/atKeywords'>;
}
declare module 'stylelint/lib/reference/functions.js' {
  declare module.exports: $Exports<'stylelint/lib/reference/functions'>;
}
declare module 'stylelint/lib/reference/keywords.js' {
  declare module.exports: $Exports<'stylelint/lib/reference/keywords'>;
}
declare module 'stylelint/lib/reference/mediaFeatures.js' {
  declare module.exports: $Exports<'stylelint/lib/reference/mediaFeatures'>;
}
declare module 'stylelint/lib/reference/properties.js' {
  declare module.exports: $Exports<'stylelint/lib/reference/properties'>;
}
declare module 'stylelint/lib/reference/selectors.js' {
  declare module.exports: $Exports<'stylelint/lib/reference/selectors'>;
}
declare module 'stylelint/lib/reference/units.js' {
  declare module.exports: $Exports<'stylelint/lib/reference/units'>;
}
declare module 'stylelint/lib/reportDisables.js' {
  declare module.exports: $Exports<'stylelint/lib/reportDisables'>;
}
declare module 'stylelint/lib/reportUnknownRuleNames.js' {
  declare module.exports: $Exports<'stylelint/lib/reportUnknownRuleNames'>;
}
declare module 'stylelint/lib/resolveConfig.js' {
  declare module.exports: $Exports<'stylelint/lib/resolveConfig'>;
}
declare module 'stylelint/lib/resolveCustomFormatter.js' {
  declare module.exports: $Exports<'stylelint/lib/resolveCustomFormatter'>;
}
declare module 'stylelint/lib/rules/alpha-value-notation/index' {
  declare module.exports: $Exports<'stylelint/lib/rules/alpha-value-notation'>;
}
declare module 'stylelint/lib/rules/alpha-value-notation/index.js' {
  declare module.exports: $Exports<'stylelint/lib/rules/alpha-value-notation'>;
}
declare module 'stylelint/lib/rules/annotation-no-unknown/index' {
  declare module.exports: $Exports<'stylelint/lib/rules/annotation-no-unknown'>;
}
declare module 'stylelint/lib/rules/annotation-no-unknown/index.js' {
  declare module.exports: $Exports<'stylelint/lib/rules/annotation-no-unknown'>;
}
declare module 'stylelint/lib/rules/at-rule-allowed-list/index' {
  declare module.exports: $Exports<'stylelint/lib/rules/at-rule-allowed-list'>;
}
declare module 'stylelint/lib/rules/at-rule-allowed-list/index.js' {
  declare module.exports: $Exports<'stylelint/lib/rules/at-rule-allowed-list'>;
}
declare module 'stylelint/lib/rules/at-rule-disallowed-list/index' {
  declare module.exports: $Exports<'stylelint/lib/rules/at-rule-disallowed-list'>;
}
declare module 'stylelint/lib/rules/at-rule-disallowed-list/index.js' {
  declare module.exports: $Exports<'stylelint/lib/rules/at-rule-disallowed-list'>;
}
declare module 'stylelint/lib/rules/at-rule-empty-line-before/index' {
  declare module.exports: $Exports<'stylelint/lib/rules/at-rule-empty-line-before'>;
}
declare module 'stylelint/lib/rules/at-rule-empty-line-before/index.js' {
  declare module.exports: $Exports<'stylelint/lib/rules/at-rule-empty-line-before'>;
}
declare module 'stylelint/lib/rules/at-rule-name-case/index' {
  declare module.exports: $Exports<'stylelint/lib/rules/at-rule-name-case'>;
}
declare module 'stylelint/lib/rules/at-rule-name-case/index.js' {
  declare module.exports: $Exports<'stylelint/lib/rules/at-rule-name-case'>;
}
declare module 'stylelint/lib/rules/at-rule-name-newline-after/index' {
  declare module.exports: $Exports<'stylelint/lib/rules/at-rule-name-newline-after'>;
}
declare module 'stylelint/lib/rules/at-rule-name-newline-after/index.js' {
  declare module.exports: $Exports<'stylelint/lib/rules/at-rule-name-newline-after'>;
}
declare module 'stylelint/lib/rules/at-rule-name-space-after/index' {
  declare module.exports: $Exports<'stylelint/lib/rules/at-rule-name-space-after'>;
}
declare module 'stylelint/lib/rules/at-rule-name-space-after/index.js' {
  declare module.exports: $Exports<'stylelint/lib/rules/at-rule-name-space-after'>;
}
declare module 'stylelint/lib/rules/at-rule-no-unknown/index' {
  declare module.exports: $Exports<'stylelint/lib/rules/at-rule-no-unknown'>;
}
declare module 'stylelint/lib/rules/at-rule-no-unknown/index.js' {
  declare module.exports: $Exports<'stylelint/lib/rules/at-rule-no-unknown'>;
}
declare module 'stylelint/lib/rules/at-rule-no-vendor-prefix/index' {
  declare module.exports: $Exports<'stylelint/lib/rules/at-rule-no-vendor-prefix'>;
}
declare module 'stylelint/lib/rules/at-rule-no-vendor-prefix/index.js' {
  declare module.exports: $Exports<'stylelint/lib/rules/at-rule-no-vendor-prefix'>;
}
declare module 'stylelint/lib/rules/at-rule-property-required-list/index' {
  declare module.exports: $Exports<'stylelint/lib/rules/at-rule-property-required-list'>;
}
declare module 'stylelint/lib/rules/at-rule-property-required-list/index.js' {
  declare module.exports: $Exports<'stylelint/lib/rules/at-rule-property-required-list'>;
}
declare module 'stylelint/lib/rules/at-rule-semicolon-newline-after/index' {
  declare module.exports: $Exports<'stylelint/lib/rules/at-rule-semicolon-newline-after'>;
}
declare module 'stylelint/lib/rules/at-rule-semicolon-newline-after/index.js' {
  declare module.exports: $Exports<'stylelint/lib/rules/at-rule-semicolon-newline-after'>;
}
declare module 'stylelint/lib/rules/at-rule-semicolon-space-before/index' {
  declare module.exports: $Exports<'stylelint/lib/rules/at-rule-semicolon-space-before'>;
}
declare module 'stylelint/lib/rules/at-rule-semicolon-space-before/index.js' {
  declare module.exports: $Exports<'stylelint/lib/rules/at-rule-semicolon-space-before'>;
}
declare module 'stylelint/lib/rules/atRuleNameSpaceChecker.js' {
  declare module.exports: $Exports<'stylelint/lib/rules/atRuleNameSpaceChecker'>;
}
declare module 'stylelint/lib/rules/block-closing-brace-empty-line-before/index' {
  declare module.exports: $Exports<'stylelint/lib/rules/block-closing-brace-empty-line-before'>;
}
declare module 'stylelint/lib/rules/block-closing-brace-empty-line-before/index.js' {
  declare module.exports: $Exports<'stylelint/lib/rules/block-closing-brace-empty-line-before'>;
}
declare module 'stylelint/lib/rules/block-closing-brace-newline-after/index' {
  declare module.exports: $Exports<'stylelint/lib/rules/block-closing-brace-newline-after'>;
}
declare module 'stylelint/lib/rules/block-closing-brace-newline-after/index.js' {
  declare module.exports: $Exports<'stylelint/lib/rules/block-closing-brace-newline-after'>;
}
declare module 'stylelint/lib/rules/block-closing-brace-newline-before/index' {
  declare module.exports: $Exports<'stylelint/lib/rules/block-closing-brace-newline-before'>;
}
declare module 'stylelint/lib/rules/block-closing-brace-newline-before/index.js' {
  declare module.exports: $Exports<'stylelint/lib/rules/block-closing-brace-newline-before'>;
}
declare module 'stylelint/lib/rules/block-closing-brace-space-after/index' {
  declare module.exports: $Exports<'stylelint/lib/rules/block-closing-brace-space-after'>;
}
declare module 'stylelint/lib/rules/block-closing-brace-space-after/index.js' {
  declare module.exports: $Exports<'stylelint/lib/rules/block-closing-brace-space-after'>;
}
declare module 'stylelint/lib/rules/block-closing-brace-space-before/index' {
  declare module.exports: $Exports<'stylelint/lib/rules/block-closing-brace-space-before'>;
}
declare module 'stylelint/lib/rules/block-closing-brace-space-before/index.js' {
  declare module.exports: $Exports<'stylelint/lib/rules/block-closing-brace-space-before'>;
}
declare module 'stylelint/lib/rules/block-no-empty/index' {
  declare module.exports: $Exports<'stylelint/lib/rules/block-no-empty'>;
}
declare module 'stylelint/lib/rules/block-no-empty/index.js' {
  declare module.exports: $Exports<'stylelint/lib/rules/block-no-empty'>;
}
declare module 'stylelint/lib/rules/block-opening-brace-newline-after/index' {
  declare module.exports: $Exports<'stylelint/lib/rules/block-opening-brace-newline-after'>;
}
declare module 'stylelint/lib/rules/block-opening-brace-newline-after/index.js' {
  declare module.exports: $Exports<'stylelint/lib/rules/block-opening-brace-newline-after'>;
}
declare module 'stylelint/lib/rules/block-opening-brace-newline-before/index' {
  declare module.exports: $Exports<'stylelint/lib/rules/block-opening-brace-newline-before'>;
}
declare module 'stylelint/lib/rules/block-opening-brace-newline-before/index.js' {
  declare module.exports: $Exports<'stylelint/lib/rules/block-opening-brace-newline-before'>;
}
declare module 'stylelint/lib/rules/block-opening-brace-space-after/index' {
  declare module.exports: $Exports<'stylelint/lib/rules/block-opening-brace-space-after'>;
}
declare module 'stylelint/lib/rules/block-opening-brace-space-after/index.js' {
  declare module.exports: $Exports<'stylelint/lib/rules/block-opening-brace-space-after'>;
}
declare module 'stylelint/lib/rules/block-opening-brace-space-before/index' {
  declare module.exports: $Exports<'stylelint/lib/rules/block-opening-brace-space-before'>;
}
declare module 'stylelint/lib/rules/block-opening-brace-space-before/index.js' {
  declare module.exports: $Exports<'stylelint/lib/rules/block-opening-brace-space-before'>;
}
declare module 'stylelint/lib/rules/color-function-notation/index' {
  declare module.exports: $Exports<'stylelint/lib/rules/color-function-notation'>;
}
declare module 'stylelint/lib/rules/color-function-notation/index.js' {
  declare module.exports: $Exports<'stylelint/lib/rules/color-function-notation'>;
}
declare module 'stylelint/lib/rules/color-hex-alpha/index' {
  declare module.exports: $Exports<'stylelint/lib/rules/color-hex-alpha'>;
}
declare module 'stylelint/lib/rules/color-hex-alpha/index.js' {
  declare module.exports: $Exports<'stylelint/lib/rules/color-hex-alpha'>;
}
declare module 'stylelint/lib/rules/color-hex-case/index' {
  declare module.exports: $Exports<'stylelint/lib/rules/color-hex-case'>;
}
declare module 'stylelint/lib/rules/color-hex-case/index.js' {
  declare module.exports: $Exports<'stylelint/lib/rules/color-hex-case'>;
}
declare module 'stylelint/lib/rules/color-hex-length/index' {
  declare module.exports: $Exports<'stylelint/lib/rules/color-hex-length'>;
}
declare module 'stylelint/lib/rules/color-hex-length/index.js' {
  declare module.exports: $Exports<'stylelint/lib/rules/color-hex-length'>;
}
declare module 'stylelint/lib/rules/color-named/colordUtils.js' {
  declare module.exports: $Exports<'stylelint/lib/rules/color-named/colordUtils'>;
}
declare module 'stylelint/lib/rules/color-named/index' {
  declare module.exports: $Exports<'stylelint/lib/rules/color-named'>;
}
declare module 'stylelint/lib/rules/color-named/index.js' {
  declare module.exports: $Exports<'stylelint/lib/rules/color-named'>;
}
declare module 'stylelint/lib/rules/color-no-hex/index' {
  declare module.exports: $Exports<'stylelint/lib/rules/color-no-hex'>;
}
declare module 'stylelint/lib/rules/color-no-hex/index.js' {
  declare module.exports: $Exports<'stylelint/lib/rules/color-no-hex'>;
}
declare module 'stylelint/lib/rules/color-no-invalid-hex/index' {
  declare module.exports: $Exports<'stylelint/lib/rules/color-no-invalid-hex'>;
}
declare module 'stylelint/lib/rules/color-no-invalid-hex/index.js' {
  declare module.exports: $Exports<'stylelint/lib/rules/color-no-invalid-hex'>;
}
declare module 'stylelint/lib/rules/comment-empty-line-before/index' {
  declare module.exports: $Exports<'stylelint/lib/rules/comment-empty-line-before'>;
}
declare module 'stylelint/lib/rules/comment-empty-line-before/index.js' {
  declare module.exports: $Exports<'stylelint/lib/rules/comment-empty-line-before'>;
}
declare module 'stylelint/lib/rules/comment-no-empty/index' {
  declare module.exports: $Exports<'stylelint/lib/rules/comment-no-empty'>;
}
declare module 'stylelint/lib/rules/comment-no-empty/index.js' {
  declare module.exports: $Exports<'stylelint/lib/rules/comment-no-empty'>;
}
declare module 'stylelint/lib/rules/comment-pattern/index' {
  declare module.exports: $Exports<'stylelint/lib/rules/comment-pattern'>;
}
declare module 'stylelint/lib/rules/comment-pattern/index.js' {
  declare module.exports: $Exports<'stylelint/lib/rules/comment-pattern'>;
}
declare module 'stylelint/lib/rules/comment-whitespace-inside/index' {
  declare module.exports: $Exports<'stylelint/lib/rules/comment-whitespace-inside'>;
}
declare module 'stylelint/lib/rules/comment-whitespace-inside/index.js' {
  declare module.exports: $Exports<'stylelint/lib/rules/comment-whitespace-inside'>;
}
declare module 'stylelint/lib/rules/comment-word-disallowed-list/index' {
  declare module.exports: $Exports<'stylelint/lib/rules/comment-word-disallowed-list'>;
}
declare module 'stylelint/lib/rules/comment-word-disallowed-list/index.js' {
  declare module.exports: $Exports<'stylelint/lib/rules/comment-word-disallowed-list'>;
}
declare module 'stylelint/lib/rules/custom-media-pattern/index' {
  declare module.exports: $Exports<'stylelint/lib/rules/custom-media-pattern'>;
}
declare module 'stylelint/lib/rules/custom-media-pattern/index.js' {
  declare module.exports: $Exports<'stylelint/lib/rules/custom-media-pattern'>;
}
declare module 'stylelint/lib/rules/custom-property-empty-line-before/index' {
  declare module.exports: $Exports<'stylelint/lib/rules/custom-property-empty-line-before'>;
}
declare module 'stylelint/lib/rules/custom-property-empty-line-before/index.js' {
  declare module.exports: $Exports<'stylelint/lib/rules/custom-property-empty-line-before'>;
}
declare module 'stylelint/lib/rules/custom-property-no-missing-var-function/index' {
  declare module.exports: $Exports<'stylelint/lib/rules/custom-property-no-missing-var-function'>;
}
declare module 'stylelint/lib/rules/custom-property-no-missing-var-function/index.js' {
  declare module.exports: $Exports<'stylelint/lib/rules/custom-property-no-missing-var-function'>;
}
declare module 'stylelint/lib/rules/custom-property-pattern/index' {
  declare module.exports: $Exports<'stylelint/lib/rules/custom-property-pattern'>;
}
declare module 'stylelint/lib/rules/custom-property-pattern/index.js' {
  declare module.exports: $Exports<'stylelint/lib/rules/custom-property-pattern'>;
}
declare module 'stylelint/lib/rules/declaration-bang-space-after/index' {
  declare module.exports: $Exports<'stylelint/lib/rules/declaration-bang-space-after'>;
}
declare module 'stylelint/lib/rules/declaration-bang-space-after/index.js' {
  declare module.exports: $Exports<'stylelint/lib/rules/declaration-bang-space-after'>;
}
declare module 'stylelint/lib/rules/declaration-bang-space-before/index' {
  declare module.exports: $Exports<'stylelint/lib/rules/declaration-bang-space-before'>;
}
declare module 'stylelint/lib/rules/declaration-bang-space-before/index.js' {
  declare module.exports: $Exports<'stylelint/lib/rules/declaration-bang-space-before'>;
}
declare module 'stylelint/lib/rules/declaration-block-no-duplicate-custom-properties/index' {
  declare module.exports: $Exports<'stylelint/lib/rules/declaration-block-no-duplicate-custom-properties'>;
}
declare module 'stylelint/lib/rules/declaration-block-no-duplicate-custom-properties/index.js' {
  declare module.exports: $Exports<'stylelint/lib/rules/declaration-block-no-duplicate-custom-properties'>;
}
declare module 'stylelint/lib/rules/declaration-block-no-duplicate-properties/index' {
  declare module.exports: $Exports<'stylelint/lib/rules/declaration-block-no-duplicate-properties'>;
}
declare module 'stylelint/lib/rules/declaration-block-no-duplicate-properties/index.js' {
  declare module.exports: $Exports<'stylelint/lib/rules/declaration-block-no-duplicate-properties'>;
}
declare module 'stylelint/lib/rules/declaration-block-no-redundant-longhand-properties/index' {
  declare module.exports: $Exports<'stylelint/lib/rules/declaration-block-no-redundant-longhand-properties'>;
}
declare module 'stylelint/lib/rules/declaration-block-no-redundant-longhand-properties/index.js' {
  declare module.exports: $Exports<'stylelint/lib/rules/declaration-block-no-redundant-longhand-properties'>;
}
declare module 'stylelint/lib/rules/declaration-block-no-shorthand-property-overrides/index' {
  declare module.exports: $Exports<'stylelint/lib/rules/declaration-block-no-shorthand-property-overrides'>;
}
declare module 'stylelint/lib/rules/declaration-block-no-shorthand-property-overrides/index.js' {
  declare module.exports: $Exports<'stylelint/lib/rules/declaration-block-no-shorthand-property-overrides'>;
}
declare module 'stylelint/lib/rules/declaration-block-semicolon-newline-after/index' {
  declare module.exports: $Exports<'stylelint/lib/rules/declaration-block-semicolon-newline-after'>;
}
declare module 'stylelint/lib/rules/declaration-block-semicolon-newline-after/index.js' {
  declare module.exports: $Exports<'stylelint/lib/rules/declaration-block-semicolon-newline-after'>;
}
declare module 'stylelint/lib/rules/declaration-block-semicolon-newline-before/index' {
  declare module.exports: $Exports<'stylelint/lib/rules/declaration-block-semicolon-newline-before'>;
}
declare module 'stylelint/lib/rules/declaration-block-semicolon-newline-before/index.js' {
  declare module.exports: $Exports<'stylelint/lib/rules/declaration-block-semicolon-newline-before'>;
}
declare module 'stylelint/lib/rules/declaration-block-semicolon-space-after/index' {
  declare module.exports: $Exports<'stylelint/lib/rules/declaration-block-semicolon-space-after'>;
}
declare module 'stylelint/lib/rules/declaration-block-semicolon-space-after/index.js' {
  declare module.exports: $Exports<'stylelint/lib/rules/declaration-block-semicolon-space-after'>;
}
declare module 'stylelint/lib/rules/declaration-block-semicolon-space-before/index' {
  declare module.exports: $Exports<'stylelint/lib/rules/declaration-block-semicolon-space-before'>;
}
declare module 'stylelint/lib/rules/declaration-block-semicolon-space-before/index.js' {
  declare module.exports: $Exports<'stylelint/lib/rules/declaration-block-semicolon-space-before'>;
}
declare module 'stylelint/lib/rules/declaration-block-single-line-max-declarations/index' {
  declare module.exports: $Exports<'stylelint/lib/rules/declaration-block-single-line-max-declarations'>;
}
declare module 'stylelint/lib/rules/declaration-block-single-line-max-declarations/index.js' {
  declare module.exports: $Exports<'stylelint/lib/rules/declaration-block-single-line-max-declarations'>;
}
declare module 'stylelint/lib/rules/declaration-block-trailing-semicolon/index' {
  declare module.exports: $Exports<'stylelint/lib/rules/declaration-block-trailing-semicolon'>;
}
declare module 'stylelint/lib/rules/declaration-block-trailing-semicolon/index.js' {
  declare module.exports: $Exports<'stylelint/lib/rules/declaration-block-trailing-semicolon'>;
}
declare module 'stylelint/lib/rules/declaration-colon-newline-after/index' {
  declare module.exports: $Exports<'stylelint/lib/rules/declaration-colon-newline-after'>;
}
declare module 'stylelint/lib/rules/declaration-colon-newline-after/index.js' {
  declare module.exports: $Exports<'stylelint/lib/rules/declaration-colon-newline-after'>;
}
declare module 'stylelint/lib/rules/declaration-colon-space-after/index' {
  declare module.exports: $Exports<'stylelint/lib/rules/declaration-colon-space-after'>;
}
declare module 'stylelint/lib/rules/declaration-colon-space-after/index.js' {
  declare module.exports: $Exports<'stylelint/lib/rules/declaration-colon-space-after'>;
}
declare module 'stylelint/lib/rules/declaration-colon-space-before/index' {
  declare module.exports: $Exports<'stylelint/lib/rules/declaration-colon-space-before'>;
}
declare module 'stylelint/lib/rules/declaration-colon-space-before/index.js' {
  declare module.exports: $Exports<'stylelint/lib/rules/declaration-colon-space-before'>;
}
declare module 'stylelint/lib/rules/declaration-empty-line-before/index' {
  declare module.exports: $Exports<'stylelint/lib/rules/declaration-empty-line-before'>;
}
declare module 'stylelint/lib/rules/declaration-empty-line-before/index.js' {
  declare module.exports: $Exports<'stylelint/lib/rules/declaration-empty-line-before'>;
}
declare module 'stylelint/lib/rules/declaration-no-important/index' {
  declare module.exports: $Exports<'stylelint/lib/rules/declaration-no-important'>;
}
declare module 'stylelint/lib/rules/declaration-no-important/index.js' {
  declare module.exports: $Exports<'stylelint/lib/rules/declaration-no-important'>;
}
declare module 'stylelint/lib/rules/declaration-property-max-values/index' {
  declare module.exports: $Exports<'stylelint/lib/rules/declaration-property-max-values'>;
}
declare module 'stylelint/lib/rules/declaration-property-max-values/index.js' {
  declare module.exports: $Exports<'stylelint/lib/rules/declaration-property-max-values'>;
}
declare module 'stylelint/lib/rules/declaration-property-unit-allowed-list/index' {
  declare module.exports: $Exports<'stylelint/lib/rules/declaration-property-unit-allowed-list'>;
}
declare module 'stylelint/lib/rules/declaration-property-unit-allowed-list/index.js' {
  declare module.exports: $Exports<'stylelint/lib/rules/declaration-property-unit-allowed-list'>;
}
declare module 'stylelint/lib/rules/declaration-property-unit-disallowed-list/index' {
  declare module.exports: $Exports<'stylelint/lib/rules/declaration-property-unit-disallowed-list'>;
}
declare module 'stylelint/lib/rules/declaration-property-unit-disallowed-list/index.js' {
  declare module.exports: $Exports<'stylelint/lib/rules/declaration-property-unit-disallowed-list'>;
}
declare module 'stylelint/lib/rules/declaration-property-value-allowed-list/index' {
  declare module.exports: $Exports<'stylelint/lib/rules/declaration-property-value-allowed-list'>;
}
declare module 'stylelint/lib/rules/declaration-property-value-allowed-list/index.js' {
  declare module.exports: $Exports<'stylelint/lib/rules/declaration-property-value-allowed-list'>;
}
declare module 'stylelint/lib/rules/declaration-property-value-disallowed-list/index' {
  declare module.exports: $Exports<'stylelint/lib/rules/declaration-property-value-disallowed-list'>;
}
declare module 'stylelint/lib/rules/declaration-property-value-disallowed-list/index.js' {
  declare module.exports: $Exports<'stylelint/lib/rules/declaration-property-value-disallowed-list'>;
}
declare module 'stylelint/lib/rules/declarationBangSpaceChecker.js' {
  declare module.exports: $Exports<'stylelint/lib/rules/declarationBangSpaceChecker'>;
}
declare module 'stylelint/lib/rules/declarationColonSpaceChecker.js' {
  declare module.exports: $Exports<'stylelint/lib/rules/declarationColonSpaceChecker'>;
}
declare module 'stylelint/lib/rules/findMediaOperator.js' {
  declare module.exports: $Exports<'stylelint/lib/rules/findMediaOperator'>;
}
declare module 'stylelint/lib/rules/font-family-name-quotes/index' {
  declare module.exports: $Exports<'stylelint/lib/rules/font-family-name-quotes'>;
}
declare module 'stylelint/lib/rules/font-family-name-quotes/index.js' {
  declare module.exports: $Exports<'stylelint/lib/rules/font-family-name-quotes'>;
}
declare module 'stylelint/lib/rules/font-family-no-duplicate-names/index' {
  declare module.exports: $Exports<'stylelint/lib/rules/font-family-no-duplicate-names'>;
}
declare module 'stylelint/lib/rules/font-family-no-duplicate-names/index.js' {
  declare module.exports: $Exports<'stylelint/lib/rules/font-family-no-duplicate-names'>;
}
declare module 'stylelint/lib/rules/font-family-no-missing-generic-family-keyword/index' {
  declare module.exports: $Exports<'stylelint/lib/rules/font-family-no-missing-generic-family-keyword'>;
}
declare module 'stylelint/lib/rules/font-family-no-missing-generic-family-keyword/index.js' {
  declare module.exports: $Exports<'stylelint/lib/rules/font-family-no-missing-generic-family-keyword'>;
}
declare module 'stylelint/lib/rules/font-weight-notation/index' {
  declare module.exports: $Exports<'stylelint/lib/rules/font-weight-notation'>;
}
declare module 'stylelint/lib/rules/font-weight-notation/index.js' {
  declare module.exports: $Exports<'stylelint/lib/rules/font-weight-notation'>;
}
declare module 'stylelint/lib/rules/function-allowed-list/index' {
  declare module.exports: $Exports<'stylelint/lib/rules/function-allowed-list'>;
}
declare module 'stylelint/lib/rules/function-allowed-list/index.js' {
  declare module.exports: $Exports<'stylelint/lib/rules/function-allowed-list'>;
}
declare module 'stylelint/lib/rules/function-calc-no-unspaced-operator/index' {
  declare module.exports: $Exports<'stylelint/lib/rules/function-calc-no-unspaced-operator'>;
}
declare module 'stylelint/lib/rules/function-calc-no-unspaced-operator/index.js' {
  declare module.exports: $Exports<'stylelint/lib/rules/function-calc-no-unspaced-operator'>;
}
declare module 'stylelint/lib/rules/function-comma-newline-after/index' {
  declare module.exports: $Exports<'stylelint/lib/rules/function-comma-newline-after'>;
}
declare module 'stylelint/lib/rules/function-comma-newline-after/index.js' {
  declare module.exports: $Exports<'stylelint/lib/rules/function-comma-newline-after'>;
}
declare module 'stylelint/lib/rules/function-comma-newline-before/index' {
  declare module.exports: $Exports<'stylelint/lib/rules/function-comma-newline-before'>;
}
declare module 'stylelint/lib/rules/function-comma-newline-before/index.js' {
  declare module.exports: $Exports<'stylelint/lib/rules/function-comma-newline-before'>;
}
declare module 'stylelint/lib/rules/function-comma-space-after/index' {
  declare module.exports: $Exports<'stylelint/lib/rules/function-comma-space-after'>;
}
declare module 'stylelint/lib/rules/function-comma-space-after/index.js' {
  declare module.exports: $Exports<'stylelint/lib/rules/function-comma-space-after'>;
}
declare module 'stylelint/lib/rules/function-comma-space-before/index' {
  declare module.exports: $Exports<'stylelint/lib/rules/function-comma-space-before'>;
}
declare module 'stylelint/lib/rules/function-comma-space-before/index.js' {
  declare module.exports: $Exports<'stylelint/lib/rules/function-comma-space-before'>;
}
declare module 'stylelint/lib/rules/function-disallowed-list/index' {
  declare module.exports: $Exports<'stylelint/lib/rules/function-disallowed-list'>;
}
declare module 'stylelint/lib/rules/function-disallowed-list/index.js' {
  declare module.exports: $Exports<'stylelint/lib/rules/function-disallowed-list'>;
}
declare module 'stylelint/lib/rules/function-linear-gradient-no-nonstandard-direction/index' {
  declare module.exports: $Exports<'stylelint/lib/rules/function-linear-gradient-no-nonstandard-direction'>;
}
declare module 'stylelint/lib/rules/function-linear-gradient-no-nonstandard-direction/index.js' {
  declare module.exports: $Exports<'stylelint/lib/rules/function-linear-gradient-no-nonstandard-direction'>;
}
declare module 'stylelint/lib/rules/function-max-empty-lines/index' {
  declare module.exports: $Exports<'stylelint/lib/rules/function-max-empty-lines'>;
}
declare module 'stylelint/lib/rules/function-max-empty-lines/index.js' {
  declare module.exports: $Exports<'stylelint/lib/rules/function-max-empty-lines'>;
}
declare module 'stylelint/lib/rules/function-name-case/index' {
  declare module.exports: $Exports<'stylelint/lib/rules/function-name-case'>;
}
declare module 'stylelint/lib/rules/function-name-case/index.js' {
  declare module.exports: $Exports<'stylelint/lib/rules/function-name-case'>;
}
declare module 'stylelint/lib/rules/function-no-unknown/index' {
  declare module.exports: $Exports<'stylelint/lib/rules/function-no-unknown'>;
}
declare module 'stylelint/lib/rules/function-no-unknown/index.js' {
  declare module.exports: $Exports<'stylelint/lib/rules/function-no-unknown'>;
}
declare module 'stylelint/lib/rules/function-parentheses-newline-inside/index' {
  declare module.exports: $Exports<'stylelint/lib/rules/function-parentheses-newline-inside'>;
}
declare module 'stylelint/lib/rules/function-parentheses-newline-inside/index.js' {
  declare module.exports: $Exports<'stylelint/lib/rules/function-parentheses-newline-inside'>;
}
declare module 'stylelint/lib/rules/function-parentheses-space-inside/index' {
  declare module.exports: $Exports<'stylelint/lib/rules/function-parentheses-space-inside'>;
}
declare module 'stylelint/lib/rules/function-parentheses-space-inside/index.js' {
  declare module.exports: $Exports<'stylelint/lib/rules/function-parentheses-space-inside'>;
}
declare module 'stylelint/lib/rules/function-url-no-scheme-relative/index' {
  declare module.exports: $Exports<'stylelint/lib/rules/function-url-no-scheme-relative'>;
}
declare module 'stylelint/lib/rules/function-url-no-scheme-relative/index.js' {
  declare module.exports: $Exports<'stylelint/lib/rules/function-url-no-scheme-relative'>;
}
declare module 'stylelint/lib/rules/function-url-quotes/index' {
  declare module.exports: $Exports<'stylelint/lib/rules/function-url-quotes'>;
}
declare module 'stylelint/lib/rules/function-url-quotes/index.js' {
  declare module.exports: $Exports<'stylelint/lib/rules/function-url-quotes'>;
}
declare module 'stylelint/lib/rules/function-url-scheme-allowed-list/index' {
  declare module.exports: $Exports<'stylelint/lib/rules/function-url-scheme-allowed-list'>;
}
declare module 'stylelint/lib/rules/function-url-scheme-allowed-list/index.js' {
  declare module.exports: $Exports<'stylelint/lib/rules/function-url-scheme-allowed-list'>;
}
declare module 'stylelint/lib/rules/function-url-scheme-disallowed-list/index' {
  declare module.exports: $Exports<'stylelint/lib/rules/function-url-scheme-disallowed-list'>;
}
declare module 'stylelint/lib/rules/function-url-scheme-disallowed-list/index.js' {
  declare module.exports: $Exports<'stylelint/lib/rules/function-url-scheme-disallowed-list'>;
}
declare module 'stylelint/lib/rules/function-whitespace-after/index' {
  declare module.exports: $Exports<'stylelint/lib/rules/function-whitespace-after'>;
}
declare module 'stylelint/lib/rules/function-whitespace-after/index.js' {
  declare module.exports: $Exports<'stylelint/lib/rules/function-whitespace-after'>;
}
declare module 'stylelint/lib/rules/functionCommaSpaceChecker.js' {
  declare module.exports: $Exports<'stylelint/lib/rules/functionCommaSpaceChecker'>;
}
declare module 'stylelint/lib/rules/functionCommaSpaceFix.js' {
  declare module.exports: $Exports<'stylelint/lib/rules/functionCommaSpaceFix'>;
}
declare module 'stylelint/lib/rules/hue-degree-notation/index' {
  declare module.exports: $Exports<'stylelint/lib/rules/hue-degree-notation'>;
}
declare module 'stylelint/lib/rules/hue-degree-notation/index.js' {
  declare module.exports: $Exports<'stylelint/lib/rules/hue-degree-notation'>;
}
declare module 'stylelint/lib/rules/import-notation/index' {
  declare module.exports: $Exports<'stylelint/lib/rules/import-notation'>;
}
declare module 'stylelint/lib/rules/import-notation/index.js' {
  declare module.exports: $Exports<'stylelint/lib/rules/import-notation'>;
}
declare module 'stylelint/lib/rules/indentation/index' {
  declare module.exports: $Exports<'stylelint/lib/rules/indentation'>;
}
declare module 'stylelint/lib/rules/indentation/index.js' {
  declare module.exports: $Exports<'stylelint/lib/rules/indentation'>;
}
declare module 'stylelint/lib/rules/index' {
  declare module.exports: $Exports<'stylelint/lib/rules'>;
}
declare module 'stylelint/lib/rules/index.js' {
  declare module.exports: $Exports<'stylelint/lib/rules'>;
}
declare module 'stylelint/lib/rules/keyframe-block-no-duplicate-selectors/index' {
  declare module.exports: $Exports<'stylelint/lib/rules/keyframe-block-no-duplicate-selectors'>;
}
declare module 'stylelint/lib/rules/keyframe-block-no-duplicate-selectors/index.js' {
  declare module.exports: $Exports<'stylelint/lib/rules/keyframe-block-no-duplicate-selectors'>;
}
declare module 'stylelint/lib/rules/keyframe-declaration-no-important/index' {
  declare module.exports: $Exports<'stylelint/lib/rules/keyframe-declaration-no-important'>;
}
declare module 'stylelint/lib/rules/keyframe-declaration-no-important/index.js' {
  declare module.exports: $Exports<'stylelint/lib/rules/keyframe-declaration-no-important'>;
}
declare module 'stylelint/lib/rules/keyframe-selector-notation/index' {
  declare module.exports: $Exports<'stylelint/lib/rules/keyframe-selector-notation'>;
}
declare module 'stylelint/lib/rules/keyframe-selector-notation/index.js' {
  declare module.exports: $Exports<'stylelint/lib/rules/keyframe-selector-notation'>;
}
declare module 'stylelint/lib/rules/keyframes-name-pattern/index' {
  declare module.exports: $Exports<'stylelint/lib/rules/keyframes-name-pattern'>;
}
declare module 'stylelint/lib/rules/keyframes-name-pattern/index.js' {
  declare module.exports: $Exports<'stylelint/lib/rules/keyframes-name-pattern'>;
}
declare module 'stylelint/lib/rules/length-zero-no-unit/index' {
  declare module.exports: $Exports<'stylelint/lib/rules/length-zero-no-unit'>;
}
declare module 'stylelint/lib/rules/length-zero-no-unit/index.js' {
  declare module.exports: $Exports<'stylelint/lib/rules/length-zero-no-unit'>;
}
declare module 'stylelint/lib/rules/linebreaks/index' {
  declare module.exports: $Exports<'stylelint/lib/rules/linebreaks'>;
}
declare module 'stylelint/lib/rules/linebreaks/index.js' {
  declare module.exports: $Exports<'stylelint/lib/rules/linebreaks'>;
}
declare module 'stylelint/lib/rules/max-empty-lines/index' {
  declare module.exports: $Exports<'stylelint/lib/rules/max-empty-lines'>;
}
declare module 'stylelint/lib/rules/max-empty-lines/index.js' {
  declare module.exports: $Exports<'stylelint/lib/rules/max-empty-lines'>;
}
declare module 'stylelint/lib/rules/max-line-length/index' {
  declare module.exports: $Exports<'stylelint/lib/rules/max-line-length'>;
}
declare module 'stylelint/lib/rules/max-line-length/index.js' {
  declare module.exports: $Exports<'stylelint/lib/rules/max-line-length'>;
}
declare module 'stylelint/lib/rules/max-nesting-depth/index' {
  declare module.exports: $Exports<'stylelint/lib/rules/max-nesting-depth'>;
}
declare module 'stylelint/lib/rules/max-nesting-depth/index.js' {
  declare module.exports: $Exports<'stylelint/lib/rules/max-nesting-depth'>;
}
declare module 'stylelint/lib/rules/media-feature-colon-space-after/index' {
  declare module.exports: $Exports<'stylelint/lib/rules/media-feature-colon-space-after'>;
}
declare module 'stylelint/lib/rules/media-feature-colon-space-after/index.js' {
  declare module.exports: $Exports<'stylelint/lib/rules/media-feature-colon-space-after'>;
}
declare module 'stylelint/lib/rules/media-feature-colon-space-before/index' {
  declare module.exports: $Exports<'stylelint/lib/rules/media-feature-colon-space-before'>;
}
declare module 'stylelint/lib/rules/media-feature-colon-space-before/index.js' {
  declare module.exports: $Exports<'stylelint/lib/rules/media-feature-colon-space-before'>;
}
declare module 'stylelint/lib/rules/media-feature-name-allowed-list/index' {
  declare module.exports: $Exports<'stylelint/lib/rules/media-feature-name-allowed-list'>;
}
declare module 'stylelint/lib/rules/media-feature-name-allowed-list/index.js' {
  declare module.exports: $Exports<'stylelint/lib/rules/media-feature-name-allowed-list'>;
}
declare module 'stylelint/lib/rules/media-feature-name-case/index' {
  declare module.exports: $Exports<'stylelint/lib/rules/media-feature-name-case'>;
}
declare module 'stylelint/lib/rules/media-feature-name-case/index.js' {
  declare module.exports: $Exports<'stylelint/lib/rules/media-feature-name-case'>;
}
declare module 'stylelint/lib/rules/media-feature-name-disallowed-list/index' {
  declare module.exports: $Exports<'stylelint/lib/rules/media-feature-name-disallowed-list'>;
}
declare module 'stylelint/lib/rules/media-feature-name-disallowed-list/index.js' {
  declare module.exports: $Exports<'stylelint/lib/rules/media-feature-name-disallowed-list'>;
}
declare module 'stylelint/lib/rules/media-feature-name-no-unknown/index' {
  declare module.exports: $Exports<'stylelint/lib/rules/media-feature-name-no-unknown'>;
}
declare module 'stylelint/lib/rules/media-feature-name-no-unknown/index.js' {
  declare module.exports: $Exports<'stylelint/lib/rules/media-feature-name-no-unknown'>;
}
declare module 'stylelint/lib/rules/media-feature-name-no-vendor-prefix/index' {
  declare module.exports: $Exports<'stylelint/lib/rules/media-feature-name-no-vendor-prefix'>;
}
declare module 'stylelint/lib/rules/media-feature-name-no-vendor-prefix/index.js' {
  declare module.exports: $Exports<'stylelint/lib/rules/media-feature-name-no-vendor-prefix'>;
}
declare module 'stylelint/lib/rules/media-feature-name-value-allowed-list/index' {
  declare module.exports: $Exports<'stylelint/lib/rules/media-feature-name-value-allowed-list'>;
}
declare module 'stylelint/lib/rules/media-feature-name-value-allowed-list/index.js' {
  declare module.exports: $Exports<'stylelint/lib/rules/media-feature-name-value-allowed-list'>;
}
declare module 'stylelint/lib/rules/media-feature-parentheses-space-inside/index' {
  declare module.exports: $Exports<'stylelint/lib/rules/media-feature-parentheses-space-inside'>;
}
declare module 'stylelint/lib/rules/media-feature-parentheses-space-inside/index.js' {
  declare module.exports: $Exports<'stylelint/lib/rules/media-feature-parentheses-space-inside'>;
}
declare module 'stylelint/lib/rules/media-feature-range-notation/index' {
  declare module.exports: $Exports<'stylelint/lib/rules/media-feature-range-notation'>;
}
declare module 'stylelint/lib/rules/media-feature-range-notation/index.js' {
  declare module.exports: $Exports<'stylelint/lib/rules/media-feature-range-notation'>;
}
declare module 'stylelint/lib/rules/media-feature-range-operator-space-after/index' {
  declare module.exports: $Exports<'stylelint/lib/rules/media-feature-range-operator-space-after'>;
}
declare module 'stylelint/lib/rules/media-feature-range-operator-space-after/index.js' {
  declare module.exports: $Exports<'stylelint/lib/rules/media-feature-range-operator-space-after'>;
}
declare module 'stylelint/lib/rules/media-feature-range-operator-space-before/index' {
  declare module.exports: $Exports<'stylelint/lib/rules/media-feature-range-operator-space-before'>;
}
declare module 'stylelint/lib/rules/media-feature-range-operator-space-before/index.js' {
  declare module.exports: $Exports<'stylelint/lib/rules/media-feature-range-operator-space-before'>;
}
declare module 'stylelint/lib/rules/media-query-list-comma-newline-after/index' {
  declare module.exports: $Exports<'stylelint/lib/rules/media-query-list-comma-newline-after'>;
}
declare module 'stylelint/lib/rules/media-query-list-comma-newline-after/index.js' {
  declare module.exports: $Exports<'stylelint/lib/rules/media-query-list-comma-newline-after'>;
}
declare module 'stylelint/lib/rules/media-query-list-comma-newline-before/index' {
  declare module.exports: $Exports<'stylelint/lib/rules/media-query-list-comma-newline-before'>;
}
declare module 'stylelint/lib/rules/media-query-list-comma-newline-before/index.js' {
  declare module.exports: $Exports<'stylelint/lib/rules/media-query-list-comma-newline-before'>;
}
declare module 'stylelint/lib/rules/media-query-list-comma-space-after/index' {
  declare module.exports: $Exports<'stylelint/lib/rules/media-query-list-comma-space-after'>;
}
declare module 'stylelint/lib/rules/media-query-list-comma-space-after/index.js' {
  declare module.exports: $Exports<'stylelint/lib/rules/media-query-list-comma-space-after'>;
}
declare module 'stylelint/lib/rules/media-query-list-comma-space-before/index' {
  declare module.exports: $Exports<'stylelint/lib/rules/media-query-list-comma-space-before'>;
}
declare module 'stylelint/lib/rules/media-query-list-comma-space-before/index.js' {
  declare module.exports: $Exports<'stylelint/lib/rules/media-query-list-comma-space-before'>;
}
declare module 'stylelint/lib/rules/mediaFeatureColonSpaceChecker.js' {
  declare module.exports: $Exports<'stylelint/lib/rules/mediaFeatureColonSpaceChecker'>;
}
declare module 'stylelint/lib/rules/mediaQueryListCommaWhitespaceChecker.js' {
  declare module.exports: $Exports<'stylelint/lib/rules/mediaQueryListCommaWhitespaceChecker'>;
}
declare module 'stylelint/lib/rules/named-grid-areas-no-invalid/index' {
  declare module.exports: $Exports<'stylelint/lib/rules/named-grid-areas-no-invalid'>;
}
declare module 'stylelint/lib/rules/named-grid-areas-no-invalid/index.js' {
  declare module.exports: $Exports<'stylelint/lib/rules/named-grid-areas-no-invalid'>;
}
declare module 'stylelint/lib/rules/named-grid-areas-no-invalid/utils/findNotContiguousOrRectangular.js' {
  declare module.exports: $Exports<'stylelint/lib/rules/named-grid-areas-no-invalid/utils/findNotContiguousOrRectangular'>;
}
declare module 'stylelint/lib/rules/no-descending-specificity/index' {
  declare module.exports: $Exports<'stylelint/lib/rules/no-descending-specificity'>;
}
declare module 'stylelint/lib/rules/no-descending-specificity/index.js' {
  declare module.exports: $Exports<'stylelint/lib/rules/no-descending-specificity'>;
}
declare module 'stylelint/lib/rules/no-duplicate-at-import-rules/index' {
  declare module.exports: $Exports<'stylelint/lib/rules/no-duplicate-at-import-rules'>;
}
declare module 'stylelint/lib/rules/no-duplicate-at-import-rules/index.js' {
  declare module.exports: $Exports<'stylelint/lib/rules/no-duplicate-at-import-rules'>;
}
declare module 'stylelint/lib/rules/no-duplicate-selectors/index' {
  declare module.exports: $Exports<'stylelint/lib/rules/no-duplicate-selectors'>;
}
declare module 'stylelint/lib/rules/no-duplicate-selectors/index.js' {
  declare module.exports: $Exports<'stylelint/lib/rules/no-duplicate-selectors'>;
}
declare module 'stylelint/lib/rules/no-empty-first-line/index' {
  declare module.exports: $Exports<'stylelint/lib/rules/no-empty-first-line'>;
}
declare module 'stylelint/lib/rules/no-empty-first-line/index.js' {
  declare module.exports: $Exports<'stylelint/lib/rules/no-empty-first-line'>;
}
declare module 'stylelint/lib/rules/no-empty-source/index' {
  declare module.exports: $Exports<'stylelint/lib/rules/no-empty-source'>;
}
declare module 'stylelint/lib/rules/no-empty-source/index.js' {
  declare module.exports: $Exports<'stylelint/lib/rules/no-empty-source'>;
}
declare module 'stylelint/lib/rules/no-eol-whitespace/index' {
  declare module.exports: $Exports<'stylelint/lib/rules/no-eol-whitespace'>;
}
declare module 'stylelint/lib/rules/no-eol-whitespace/index.js' {
  declare module.exports: $Exports<'stylelint/lib/rules/no-eol-whitespace'>;
}
declare module 'stylelint/lib/rules/no-extra-semicolons/index' {
  declare module.exports: $Exports<'stylelint/lib/rules/no-extra-semicolons'>;
}
declare module 'stylelint/lib/rules/no-extra-semicolons/index.js' {
  declare module.exports: $Exports<'stylelint/lib/rules/no-extra-semicolons'>;
}
declare module 'stylelint/lib/rules/no-invalid-double-slash-comments/index' {
  declare module.exports: $Exports<'stylelint/lib/rules/no-invalid-double-slash-comments'>;
}
declare module 'stylelint/lib/rules/no-invalid-double-slash-comments/index.js' {
  declare module.exports: $Exports<'stylelint/lib/rules/no-invalid-double-slash-comments'>;
}
declare module 'stylelint/lib/rules/no-invalid-position-at-import-rule/index' {
  declare module.exports: $Exports<'stylelint/lib/rules/no-invalid-position-at-import-rule'>;
}
declare module 'stylelint/lib/rules/no-invalid-position-at-import-rule/index.js' {
  declare module.exports: $Exports<'stylelint/lib/rules/no-invalid-position-at-import-rule'>;
}
declare module 'stylelint/lib/rules/no-irregular-whitespace/index' {
  declare module.exports: $Exports<'stylelint/lib/rules/no-irregular-whitespace'>;
}
declare module 'stylelint/lib/rules/no-irregular-whitespace/index.js' {
  declare module.exports: $Exports<'stylelint/lib/rules/no-irregular-whitespace'>;
}
declare module 'stylelint/lib/rules/no-missing-end-of-source-newline/index' {
  declare module.exports: $Exports<'stylelint/lib/rules/no-missing-end-of-source-newline'>;
}
declare module 'stylelint/lib/rules/no-missing-end-of-source-newline/index.js' {
  declare module.exports: $Exports<'stylelint/lib/rules/no-missing-end-of-source-newline'>;
}
declare module 'stylelint/lib/rules/no-unknown-animations/index' {
  declare module.exports: $Exports<'stylelint/lib/rules/no-unknown-animations'>;
}
declare module 'stylelint/lib/rules/no-unknown-animations/index.js' {
  declare module.exports: $Exports<'stylelint/lib/rules/no-unknown-animations'>;
}
declare module 'stylelint/lib/rules/number-leading-zero/index' {
  declare module.exports: $Exports<'stylelint/lib/rules/number-leading-zero'>;
}
declare module 'stylelint/lib/rules/number-leading-zero/index.js' {
  declare module.exports: $Exports<'stylelint/lib/rules/number-leading-zero'>;
}
declare module 'stylelint/lib/rules/number-max-precision/index' {
  declare module.exports: $Exports<'stylelint/lib/rules/number-max-precision'>;
}
declare module 'stylelint/lib/rules/number-max-precision/index.js' {
  declare module.exports: $Exports<'stylelint/lib/rules/number-max-precision'>;
}
declare module 'stylelint/lib/rules/number-no-trailing-zeros/index' {
  declare module.exports: $Exports<'stylelint/lib/rules/number-no-trailing-zeros'>;
}
declare module 'stylelint/lib/rules/number-no-trailing-zeros/index.js' {
  declare module.exports: $Exports<'stylelint/lib/rules/number-no-trailing-zeros'>;
}
declare module 'stylelint/lib/rules/property-allowed-list/index' {
  declare module.exports: $Exports<'stylelint/lib/rules/property-allowed-list'>;
}
declare module 'stylelint/lib/rules/property-allowed-list/index.js' {
  declare module.exports: $Exports<'stylelint/lib/rules/property-allowed-list'>;
}
declare module 'stylelint/lib/rules/property-case/index' {
  declare module.exports: $Exports<'stylelint/lib/rules/property-case'>;
}
declare module 'stylelint/lib/rules/property-case/index.js' {
  declare module.exports: $Exports<'stylelint/lib/rules/property-case'>;
}
declare module 'stylelint/lib/rules/property-disallowed-list/index' {
  declare module.exports: $Exports<'stylelint/lib/rules/property-disallowed-list'>;
}
declare module 'stylelint/lib/rules/property-disallowed-list/index.js' {
  declare module.exports: $Exports<'stylelint/lib/rules/property-disallowed-list'>;
}
declare module 'stylelint/lib/rules/property-no-unknown/index' {
  declare module.exports: $Exports<'stylelint/lib/rules/property-no-unknown'>;
}
declare module 'stylelint/lib/rules/property-no-unknown/index.js' {
  declare module.exports: $Exports<'stylelint/lib/rules/property-no-unknown'>;
}
declare module 'stylelint/lib/rules/property-no-vendor-prefix/index' {
  declare module.exports: $Exports<'stylelint/lib/rules/property-no-vendor-prefix'>;
}
declare module 'stylelint/lib/rules/property-no-vendor-prefix/index.js' {
  declare module.exports: $Exports<'stylelint/lib/rules/property-no-vendor-prefix'>;
}
declare module 'stylelint/lib/rules/rangeContextNodeParser.js' {
  declare module.exports: $Exports<'stylelint/lib/rules/rangeContextNodeParser'>;
}
declare module 'stylelint/lib/rules/rule-empty-line-before/index' {
  declare module.exports: $Exports<'stylelint/lib/rules/rule-empty-line-before'>;
}
declare module 'stylelint/lib/rules/rule-empty-line-before/index.js' {
  declare module.exports: $Exports<'stylelint/lib/rules/rule-empty-line-before'>;
}
declare module 'stylelint/lib/rules/rule-selector-property-disallowed-list/index' {
  declare module.exports: $Exports<'stylelint/lib/rules/rule-selector-property-disallowed-list'>;
}
declare module 'stylelint/lib/rules/rule-selector-property-disallowed-list/index.js' {
  declare module.exports: $Exports<'stylelint/lib/rules/rule-selector-property-disallowed-list'>;
}
declare module 'stylelint/lib/rules/selector-attribute-brackets-space-inside/index' {
  declare module.exports: $Exports<'stylelint/lib/rules/selector-attribute-brackets-space-inside'>;
}
declare module 'stylelint/lib/rules/selector-attribute-brackets-space-inside/index.js' {
  declare module.exports: $Exports<'stylelint/lib/rules/selector-attribute-brackets-space-inside'>;
}
declare module 'stylelint/lib/rules/selector-attribute-name-disallowed-list/index' {
  declare module.exports: $Exports<'stylelint/lib/rules/selector-attribute-name-disallowed-list'>;
}
declare module 'stylelint/lib/rules/selector-attribute-name-disallowed-list/index.js' {
  declare module.exports: $Exports<'stylelint/lib/rules/selector-attribute-name-disallowed-list'>;
}
declare module 'stylelint/lib/rules/selector-attribute-operator-allowed-list/index' {
  declare module.exports: $Exports<'stylelint/lib/rules/selector-attribute-operator-allowed-list'>;
}
declare module 'stylelint/lib/rules/selector-attribute-operator-allowed-list/index.js' {
  declare module.exports: $Exports<'stylelint/lib/rules/selector-attribute-operator-allowed-list'>;
}
declare module 'stylelint/lib/rules/selector-attribute-operator-disallowed-list/index' {
  declare module.exports: $Exports<'stylelint/lib/rules/selector-attribute-operator-disallowed-list'>;
}
declare module 'stylelint/lib/rules/selector-attribute-operator-disallowed-list/index.js' {
  declare module.exports: $Exports<'stylelint/lib/rules/selector-attribute-operator-disallowed-list'>;
}
declare module 'stylelint/lib/rules/selector-attribute-operator-space-after/index' {
  declare module.exports: $Exports<'stylelint/lib/rules/selector-attribute-operator-space-after'>;
}
declare module 'stylelint/lib/rules/selector-attribute-operator-space-after/index.js' {
  declare module.exports: $Exports<'stylelint/lib/rules/selector-attribute-operator-space-after'>;
}
declare module 'stylelint/lib/rules/selector-attribute-operator-space-before/index' {
  declare module.exports: $Exports<'stylelint/lib/rules/selector-attribute-operator-space-before'>;
}
declare module 'stylelint/lib/rules/selector-attribute-operator-space-before/index.js' {
  declare module.exports: $Exports<'stylelint/lib/rules/selector-attribute-operator-space-before'>;
}
declare module 'stylelint/lib/rules/selector-attribute-quotes/index' {
  declare module.exports: $Exports<'stylelint/lib/rules/selector-attribute-quotes'>;
}
declare module 'stylelint/lib/rules/selector-attribute-quotes/index.js' {
  declare module.exports: $Exports<'stylelint/lib/rules/selector-attribute-quotes'>;
}
declare module 'stylelint/lib/rules/selector-class-pattern/index' {
  declare module.exports: $Exports<'stylelint/lib/rules/selector-class-pattern'>;
}
declare module 'stylelint/lib/rules/selector-class-pattern/index.js' {
  declare module.exports: $Exports<'stylelint/lib/rules/selector-class-pattern'>;
}
declare module 'stylelint/lib/rules/selector-combinator-allowed-list/index' {
  declare module.exports: $Exports<'stylelint/lib/rules/selector-combinator-allowed-list'>;
}
declare module 'stylelint/lib/rules/selector-combinator-allowed-list/index.js' {
  declare module.exports: $Exports<'stylelint/lib/rules/selector-combinator-allowed-list'>;
}
declare module 'stylelint/lib/rules/selector-combinator-disallowed-list/index' {
  declare module.exports: $Exports<'stylelint/lib/rules/selector-combinator-disallowed-list'>;
}
declare module 'stylelint/lib/rules/selector-combinator-disallowed-list/index.js' {
  declare module.exports: $Exports<'stylelint/lib/rules/selector-combinator-disallowed-list'>;
}
declare module 'stylelint/lib/rules/selector-combinator-space-after/index' {
  declare module.exports: $Exports<'stylelint/lib/rules/selector-combinator-space-after'>;
}
declare module 'stylelint/lib/rules/selector-combinator-space-after/index.js' {
  declare module.exports: $Exports<'stylelint/lib/rules/selector-combinator-space-after'>;
}
declare module 'stylelint/lib/rules/selector-combinator-space-before/index' {
  declare module.exports: $Exports<'stylelint/lib/rules/selector-combinator-space-before'>;
}
declare module 'stylelint/lib/rules/selector-combinator-space-before/index.js' {
  declare module.exports: $Exports<'stylelint/lib/rules/selector-combinator-space-before'>;
}
declare module 'stylelint/lib/rules/selector-descendant-combinator-no-non-space/index' {
  declare module.exports: $Exports<'stylelint/lib/rules/selector-descendant-combinator-no-non-space'>;
}
declare module 'stylelint/lib/rules/selector-descendant-combinator-no-non-space/index.js' {
  declare module.exports: $Exports<'stylelint/lib/rules/selector-descendant-combinator-no-non-space'>;
}
declare module 'stylelint/lib/rules/selector-disallowed-list/index' {
  declare module.exports: $Exports<'stylelint/lib/rules/selector-disallowed-list'>;
}
declare module 'stylelint/lib/rules/selector-disallowed-list/index.js' {
  declare module.exports: $Exports<'stylelint/lib/rules/selector-disallowed-list'>;
}
declare module 'stylelint/lib/rules/selector-id-pattern/index' {
  declare module.exports: $Exports<'stylelint/lib/rules/selector-id-pattern'>;
}
declare module 'stylelint/lib/rules/selector-id-pattern/index.js' {
  declare module.exports: $Exports<'stylelint/lib/rules/selector-id-pattern'>;
}
declare module 'stylelint/lib/rules/selector-list-comma-newline-after/index' {
  declare module.exports: $Exports<'stylelint/lib/rules/selector-list-comma-newline-after'>;
}
declare module 'stylelint/lib/rules/selector-list-comma-newline-after/index.js' {
  declare module.exports: $Exports<'stylelint/lib/rules/selector-list-comma-newline-after'>;
}
declare module 'stylelint/lib/rules/selector-list-comma-newline-before/index' {
  declare module.exports: $Exports<'stylelint/lib/rules/selector-list-comma-newline-before'>;
}
declare module 'stylelint/lib/rules/selector-list-comma-newline-before/index.js' {
  declare module.exports: $Exports<'stylelint/lib/rules/selector-list-comma-newline-before'>;
}
declare module 'stylelint/lib/rules/selector-list-comma-space-after/index' {
  declare module.exports: $Exports<'stylelint/lib/rules/selector-list-comma-space-after'>;
}
declare module 'stylelint/lib/rules/selector-list-comma-space-after/index.js' {
  declare module.exports: $Exports<'stylelint/lib/rules/selector-list-comma-space-after'>;
}
declare module 'stylelint/lib/rules/selector-list-comma-space-before/index' {
  declare module.exports: $Exports<'stylelint/lib/rules/selector-list-comma-space-before'>;
}
declare module 'stylelint/lib/rules/selector-list-comma-space-before/index.js' {
  declare module.exports: $Exports<'stylelint/lib/rules/selector-list-comma-space-before'>;
}
declare module 'stylelint/lib/rules/selector-max-attribute/index' {
  declare module.exports: $Exports<'stylelint/lib/rules/selector-max-attribute'>;
}
declare module 'stylelint/lib/rules/selector-max-attribute/index.js' {
  declare module.exports: $Exports<'stylelint/lib/rules/selector-max-attribute'>;
}
declare module 'stylelint/lib/rules/selector-max-class/index' {
  declare module.exports: $Exports<'stylelint/lib/rules/selector-max-class'>;
}
declare module 'stylelint/lib/rules/selector-max-class/index.js' {
  declare module.exports: $Exports<'stylelint/lib/rules/selector-max-class'>;
}
declare module 'stylelint/lib/rules/selector-max-combinators/index' {
  declare module.exports: $Exports<'stylelint/lib/rules/selector-max-combinators'>;
}
declare module 'stylelint/lib/rules/selector-max-combinators/index.js' {
  declare module.exports: $Exports<'stylelint/lib/rules/selector-max-combinators'>;
}
declare module 'stylelint/lib/rules/selector-max-compound-selectors/index' {
  declare module.exports: $Exports<'stylelint/lib/rules/selector-max-compound-selectors'>;
}
declare module 'stylelint/lib/rules/selector-max-compound-selectors/index.js' {
  declare module.exports: $Exports<'stylelint/lib/rules/selector-max-compound-selectors'>;
}
declare module 'stylelint/lib/rules/selector-max-empty-lines/index' {
  declare module.exports: $Exports<'stylelint/lib/rules/selector-max-empty-lines'>;
}
declare module 'stylelint/lib/rules/selector-max-empty-lines/index.js' {
  declare module.exports: $Exports<'stylelint/lib/rules/selector-max-empty-lines'>;
}
declare module 'stylelint/lib/rules/selector-max-id/index' {
  declare module.exports: $Exports<'stylelint/lib/rules/selector-max-id'>;
}
declare module 'stylelint/lib/rules/selector-max-id/index.js' {
  declare module.exports: $Exports<'stylelint/lib/rules/selector-max-id'>;
}
declare module 'stylelint/lib/rules/selector-max-pseudo-class/index' {
  declare module.exports: $Exports<'stylelint/lib/rules/selector-max-pseudo-class'>;
}
declare module 'stylelint/lib/rules/selector-max-pseudo-class/index.js' {
  declare module.exports: $Exports<'stylelint/lib/rules/selector-max-pseudo-class'>;
}
declare module 'stylelint/lib/rules/selector-max-specificity/index' {
  declare module.exports: $Exports<'stylelint/lib/rules/selector-max-specificity'>;
}
declare module 'stylelint/lib/rules/selector-max-specificity/index.js' {
  declare module.exports: $Exports<'stylelint/lib/rules/selector-max-specificity'>;
}
declare module 'stylelint/lib/rules/selector-max-type/index' {
  declare module.exports: $Exports<'stylelint/lib/rules/selector-max-type'>;
}
declare module 'stylelint/lib/rules/selector-max-type/index.js' {
  declare module.exports: $Exports<'stylelint/lib/rules/selector-max-type'>;
}
declare module 'stylelint/lib/rules/selector-max-universal/index' {
  declare module.exports: $Exports<'stylelint/lib/rules/selector-max-universal'>;
}
declare module 'stylelint/lib/rules/selector-max-universal/index.js' {
  declare module.exports: $Exports<'stylelint/lib/rules/selector-max-universal'>;
}
declare module 'stylelint/lib/rules/selector-nested-pattern/index' {
  declare module.exports: $Exports<'stylelint/lib/rules/selector-nested-pattern'>;
}
declare module 'stylelint/lib/rules/selector-nested-pattern/index.js' {
  declare module.exports: $Exports<'stylelint/lib/rules/selector-nested-pattern'>;
}
declare module 'stylelint/lib/rules/selector-no-qualifying-type/index' {
  declare module.exports: $Exports<'stylelint/lib/rules/selector-no-qualifying-type'>;
}
declare module 'stylelint/lib/rules/selector-no-qualifying-type/index.js' {
  declare module.exports: $Exports<'stylelint/lib/rules/selector-no-qualifying-type'>;
}
declare module 'stylelint/lib/rules/selector-no-vendor-prefix/index' {
  declare module.exports: $Exports<'stylelint/lib/rules/selector-no-vendor-prefix'>;
}
declare module 'stylelint/lib/rules/selector-no-vendor-prefix/index.js' {
  declare module.exports: $Exports<'stylelint/lib/rules/selector-no-vendor-prefix'>;
}
declare module 'stylelint/lib/rules/selector-not-notation/index' {
  declare module.exports: $Exports<'stylelint/lib/rules/selector-not-notation'>;
}
declare module 'stylelint/lib/rules/selector-not-notation/index.js' {
  declare module.exports: $Exports<'stylelint/lib/rules/selector-not-notation'>;
}
declare module 'stylelint/lib/rules/selector-pseudo-class-allowed-list/index' {
  declare module.exports: $Exports<'stylelint/lib/rules/selector-pseudo-class-allowed-list'>;
}
declare module 'stylelint/lib/rules/selector-pseudo-class-allowed-list/index.js' {
  declare module.exports: $Exports<'stylelint/lib/rules/selector-pseudo-class-allowed-list'>;
}
declare module 'stylelint/lib/rules/selector-pseudo-class-case/index' {
  declare module.exports: $Exports<'stylelint/lib/rules/selector-pseudo-class-case'>;
}
declare module 'stylelint/lib/rules/selector-pseudo-class-case/index.js' {
  declare module.exports: $Exports<'stylelint/lib/rules/selector-pseudo-class-case'>;
}
declare module 'stylelint/lib/rules/selector-pseudo-class-disallowed-list/index' {
  declare module.exports: $Exports<'stylelint/lib/rules/selector-pseudo-class-disallowed-list'>;
}
declare module 'stylelint/lib/rules/selector-pseudo-class-disallowed-list/index.js' {
  declare module.exports: $Exports<'stylelint/lib/rules/selector-pseudo-class-disallowed-list'>;
}
declare module 'stylelint/lib/rules/selector-pseudo-class-no-unknown/index' {
  declare module.exports: $Exports<'stylelint/lib/rules/selector-pseudo-class-no-unknown'>;
}
declare module 'stylelint/lib/rules/selector-pseudo-class-no-unknown/index.js' {
  declare module.exports: $Exports<'stylelint/lib/rules/selector-pseudo-class-no-unknown'>;
}
declare module 'stylelint/lib/rules/selector-pseudo-class-parentheses-space-inside/index' {
  declare module.exports: $Exports<'stylelint/lib/rules/selector-pseudo-class-parentheses-space-inside'>;
}
declare module 'stylelint/lib/rules/selector-pseudo-class-parentheses-space-inside/index.js' {
  declare module.exports: $Exports<'stylelint/lib/rules/selector-pseudo-class-parentheses-space-inside'>;
}
declare module 'stylelint/lib/rules/selector-pseudo-element-allowed-list/index' {
  declare module.exports: $Exports<'stylelint/lib/rules/selector-pseudo-element-allowed-list'>;
}
declare module 'stylelint/lib/rules/selector-pseudo-element-allowed-list/index.js' {
  declare module.exports: $Exports<'stylelint/lib/rules/selector-pseudo-element-allowed-list'>;
}
declare module 'stylelint/lib/rules/selector-pseudo-element-case/index' {
  declare module.exports: $Exports<'stylelint/lib/rules/selector-pseudo-element-case'>;
}
declare module 'stylelint/lib/rules/selector-pseudo-element-case/index.js' {
  declare module.exports: $Exports<'stylelint/lib/rules/selector-pseudo-element-case'>;
}
declare module 'stylelint/lib/rules/selector-pseudo-element-colon-notation/index' {
  declare module.exports: $Exports<'stylelint/lib/rules/selector-pseudo-element-colon-notation'>;
}
declare module 'stylelint/lib/rules/selector-pseudo-element-colon-notation/index.js' {
  declare module.exports: $Exports<'stylelint/lib/rules/selector-pseudo-element-colon-notation'>;
}
declare module 'stylelint/lib/rules/selector-pseudo-element-disallowed-list/index' {
  declare module.exports: $Exports<'stylelint/lib/rules/selector-pseudo-element-disallowed-list'>;
}
declare module 'stylelint/lib/rules/selector-pseudo-element-disallowed-list/index.js' {
  declare module.exports: $Exports<'stylelint/lib/rules/selector-pseudo-element-disallowed-list'>;
}
declare module 'stylelint/lib/rules/selector-pseudo-element-no-unknown/index' {
  declare module.exports: $Exports<'stylelint/lib/rules/selector-pseudo-element-no-unknown'>;
}
declare module 'stylelint/lib/rules/selector-pseudo-element-no-unknown/index.js' {
  declare module.exports: $Exports<'stylelint/lib/rules/selector-pseudo-element-no-unknown'>;
}
declare module 'stylelint/lib/rules/selector-type-case/index' {
  declare module.exports: $Exports<'stylelint/lib/rules/selector-type-case'>;
}
declare module 'stylelint/lib/rules/selector-type-case/index.js' {
  declare module.exports: $Exports<'stylelint/lib/rules/selector-type-case'>;
}
declare module 'stylelint/lib/rules/selector-type-no-unknown/index' {
  declare module.exports: $Exports<'stylelint/lib/rules/selector-type-no-unknown'>;
}
declare module 'stylelint/lib/rules/selector-type-no-unknown/index.js' {
  declare module.exports: $Exports<'stylelint/lib/rules/selector-type-no-unknown'>;
}
declare module 'stylelint/lib/rules/selectorAttributeOperatorSpaceChecker.js' {
  declare module.exports: $Exports<'stylelint/lib/rules/selectorAttributeOperatorSpaceChecker'>;
}
declare module 'stylelint/lib/rules/selectorCombinatorSpaceChecker.js' {
  declare module.exports: $Exports<'stylelint/lib/rules/selectorCombinatorSpaceChecker'>;
}
declare module 'stylelint/lib/rules/selectorListCommaWhitespaceChecker.js' {
  declare module.exports: $Exports<'stylelint/lib/rules/selectorListCommaWhitespaceChecker'>;
}
declare module 'stylelint/lib/rules/shorthand-property-no-redundant-values/index' {
  declare module.exports: $Exports<'stylelint/lib/rules/shorthand-property-no-redundant-values'>;
}
declare module 'stylelint/lib/rules/shorthand-property-no-redundant-values/index.js' {
  declare module.exports: $Exports<'stylelint/lib/rules/shorthand-property-no-redundant-values'>;
}
declare module 'stylelint/lib/rules/string-no-newline/index' {
  declare module.exports: $Exports<'stylelint/lib/rules/string-no-newline'>;
}
declare module 'stylelint/lib/rules/string-no-newline/index.js' {
  declare module.exports: $Exports<'stylelint/lib/rules/string-no-newline'>;
}
declare module 'stylelint/lib/rules/string-quotes/index' {
  declare module.exports: $Exports<'stylelint/lib/rules/string-quotes'>;
}
declare module 'stylelint/lib/rules/string-quotes/index.js' {
  declare module.exports: $Exports<'stylelint/lib/rules/string-quotes'>;
}
declare module 'stylelint/lib/rules/time-min-milliseconds/index' {
  declare module.exports: $Exports<'stylelint/lib/rules/time-min-milliseconds'>;
}
declare module 'stylelint/lib/rules/time-min-milliseconds/index.js' {
  declare module.exports: $Exports<'stylelint/lib/rules/time-min-milliseconds'>;
}
declare module 'stylelint/lib/rules/unicode-bom/index' {
  declare module.exports: $Exports<'stylelint/lib/rules/unicode-bom'>;
}
declare module 'stylelint/lib/rules/unicode-bom/index.js' {
  declare module.exports: $Exports<'stylelint/lib/rules/unicode-bom'>;
}
declare module 'stylelint/lib/rules/unit-allowed-list/index' {
  declare module.exports: $Exports<'stylelint/lib/rules/unit-allowed-list'>;
}
declare module 'stylelint/lib/rules/unit-allowed-list/index.js' {
  declare module.exports: $Exports<'stylelint/lib/rules/unit-allowed-list'>;
}
declare module 'stylelint/lib/rules/unit-case/index' {
  declare module.exports: $Exports<'stylelint/lib/rules/unit-case'>;
}
declare module 'stylelint/lib/rules/unit-case/index.js' {
  declare module.exports: $Exports<'stylelint/lib/rules/unit-case'>;
}
declare module 'stylelint/lib/rules/unit-disallowed-list/index' {
  declare module.exports: $Exports<'stylelint/lib/rules/unit-disallowed-list'>;
}
declare module 'stylelint/lib/rules/unit-disallowed-list/index.js' {
  declare module.exports: $Exports<'stylelint/lib/rules/unit-disallowed-list'>;
}
declare module 'stylelint/lib/rules/unit-no-unknown/index' {
  declare module.exports: $Exports<'stylelint/lib/rules/unit-no-unknown'>;
}
declare module 'stylelint/lib/rules/unit-no-unknown/index.js' {
  declare module.exports: $Exports<'stylelint/lib/rules/unit-no-unknown'>;
}
declare module 'stylelint/lib/rules/value-keyword-case/index' {
  declare module.exports: $Exports<'stylelint/lib/rules/value-keyword-case'>;
}
declare module 'stylelint/lib/rules/value-keyword-case/index.js' {
  declare module.exports: $Exports<'stylelint/lib/rules/value-keyword-case'>;
}
declare module 'stylelint/lib/rules/value-list-comma-newline-after/index' {
  declare module.exports: $Exports<'stylelint/lib/rules/value-list-comma-newline-after'>;
}
declare module 'stylelint/lib/rules/value-list-comma-newline-after/index.js' {
  declare module.exports: $Exports<'stylelint/lib/rules/value-list-comma-newline-after'>;
}
declare module 'stylelint/lib/rules/value-list-comma-newline-before/index' {
  declare module.exports: $Exports<'stylelint/lib/rules/value-list-comma-newline-before'>;
}
declare module 'stylelint/lib/rules/value-list-comma-newline-before/index.js' {
  declare module.exports: $Exports<'stylelint/lib/rules/value-list-comma-newline-before'>;
}
declare module 'stylelint/lib/rules/value-list-comma-space-after/index' {
  declare module.exports: $Exports<'stylelint/lib/rules/value-list-comma-space-after'>;
}
declare module 'stylelint/lib/rules/value-list-comma-space-after/index.js' {
  declare module.exports: $Exports<'stylelint/lib/rules/value-list-comma-space-after'>;
}
declare module 'stylelint/lib/rules/value-list-comma-space-before/index' {
  declare module.exports: $Exports<'stylelint/lib/rules/value-list-comma-space-before'>;
}
declare module 'stylelint/lib/rules/value-list-comma-space-before/index.js' {
  declare module.exports: $Exports<'stylelint/lib/rules/value-list-comma-space-before'>;
}
declare module 'stylelint/lib/rules/value-list-max-empty-lines/index' {
  declare module.exports: $Exports<'stylelint/lib/rules/value-list-max-empty-lines'>;
}
declare module 'stylelint/lib/rules/value-list-max-empty-lines/index.js' {
  declare module.exports: $Exports<'stylelint/lib/rules/value-list-max-empty-lines'>;
}
declare module 'stylelint/lib/rules/value-no-vendor-prefix/index' {
  declare module.exports: $Exports<'stylelint/lib/rules/value-no-vendor-prefix'>;
}
declare module 'stylelint/lib/rules/value-no-vendor-prefix/index.js' {
  declare module.exports: $Exports<'stylelint/lib/rules/value-no-vendor-prefix'>;
}
declare module 'stylelint/lib/rules/valueListCommaWhitespaceChecker.js' {
  declare module.exports: $Exports<'stylelint/lib/rules/valueListCommaWhitespaceChecker'>;
}
declare module 'stylelint/lib/standalone.js' {
  declare module.exports: $Exports<'stylelint/lib/standalone'>;
}
declare module 'stylelint/lib/utils/addEmptyLineAfter.js' {
  declare module.exports: $Exports<'stylelint/lib/utils/addEmptyLineAfter'>;
}
declare module 'stylelint/lib/utils/addEmptyLineBefore.js' {
  declare module.exports: $Exports<'stylelint/lib/utils/addEmptyLineBefore'>;
}
declare module 'stylelint/lib/utils/allFilesIgnoredError.js' {
  declare module.exports: $Exports<'stylelint/lib/utils/allFilesIgnoredError'>;
}
declare module 'stylelint/lib/utils/arrayEqual.js' {
  declare module.exports: $Exports<'stylelint/lib/utils/arrayEqual'>;
}
declare module 'stylelint/lib/utils/atRuleParamIndex.js' {
  declare module.exports: $Exports<'stylelint/lib/utils/atRuleParamIndex'>;
}
declare module 'stylelint/lib/utils/beforeBlockString.js' {
  declare module.exports: $Exports<'stylelint/lib/utils/beforeBlockString'>;
}
declare module 'stylelint/lib/utils/blockString.js' {
  declare module.exports: $Exports<'stylelint/lib/utils/blockString'>;
}
declare module 'stylelint/lib/utils/blurComments.js' {
  declare module.exports: $Exports<'stylelint/lib/utils/blurComments'>;
}
declare module 'stylelint/lib/utils/blurFunctionArguments.js' {
  declare module.exports: $Exports<'stylelint/lib/utils/blurFunctionArguments'>;
}
declare module 'stylelint/lib/utils/blurInterpolation.js' {
  declare module.exports: $Exports<'stylelint/lib/utils/blurInterpolation'>;
}
declare module 'stylelint/lib/utils/checkAgainstRule.js' {
  declare module.exports: $Exports<'stylelint/lib/utils/checkAgainstRule'>;
}
declare module 'stylelint/lib/utils/checkInvalidCLIOptions.js' {
  declare module.exports: $Exports<'stylelint/lib/utils/checkInvalidCLIOptions'>;
}
declare module 'stylelint/lib/utils/configurationError.js' {
  declare module.exports: $Exports<'stylelint/lib/utils/configurationError'>;
}
declare module 'stylelint/lib/utils/containsString.js' {
  declare module.exports: $Exports<'stylelint/lib/utils/containsString'>;
}
declare module 'stylelint/lib/utils/declarationValueIndex.js' {
  declare module.exports: $Exports<'stylelint/lib/utils/declarationValueIndex'>;
}
declare module 'stylelint/lib/utils/eachDeclarationBlock.js' {
  declare module.exports: $Exports<'stylelint/lib/utils/eachDeclarationBlock'>;
}
declare module 'stylelint/lib/utils/FileCache.js' {
  declare module.exports: $Exports<'stylelint/lib/utils/FileCache'>;
}
declare module 'stylelint/lib/utils/filterFilePaths.js' {
  declare module.exports: $Exports<'stylelint/lib/utils/filterFilePaths'>;
}
declare module 'stylelint/lib/utils/findAnimationName.js' {
  declare module.exports: $Exports<'stylelint/lib/utils/findAnimationName'>;
}
declare module 'stylelint/lib/utils/findAtRuleContext.js' {
  declare module.exports: $Exports<'stylelint/lib/utils/findAtRuleContext'>;
}
declare module 'stylelint/lib/utils/findFontFamily.js' {
  declare module.exports: $Exports<'stylelint/lib/utils/findFontFamily'>;
}
declare module 'stylelint/lib/utils/findListStyleType.js' {
  declare module.exports: $Exports<'stylelint/lib/utils/findListStyleType'>;
}
declare module 'stylelint/lib/utils/flattenArray.js' {
  declare module.exports: $Exports<'stylelint/lib/utils/flattenArray'>;
}
declare module 'stylelint/lib/utils/functionArgumentsSearch.js' {
  declare module.exports: $Exports<'stylelint/lib/utils/functionArgumentsSearch'>;
}
declare module 'stylelint/lib/utils/getAtRuleParams.js' {
  declare module.exports: $Exports<'stylelint/lib/utils/getAtRuleParams'>;
}
declare module 'stylelint/lib/utils/getCacheFile.js' {
  declare module.exports: $Exports<'stylelint/lib/utils/getCacheFile'>;
}
declare module 'stylelint/lib/utils/getDeclarationValue.js' {
  declare module.exports: $Exports<'stylelint/lib/utils/getDeclarationValue'>;
}
declare module 'stylelint/lib/utils/getDimension.js' {
  declare module.exports: $Exports<'stylelint/lib/utils/getDimension'>;
}
declare module 'stylelint/lib/utils/getFileIgnorer.js' {
  declare module.exports: $Exports<'stylelint/lib/utils/getFileIgnorer'>;
}
declare module 'stylelint/lib/utils/getFormatterOptionsText.js' {
  declare module.exports: $Exports<'stylelint/lib/utils/getFormatterOptionsText'>;
}
declare module 'stylelint/lib/utils/getImportantPosition.js' {
  declare module.exports: $Exports<'stylelint/lib/utils/getImportantPosition'>;
}
declare module 'stylelint/lib/utils/getModulePath.js' {
  declare module.exports: $Exports<'stylelint/lib/utils/getModulePath'>;
}
declare module 'stylelint/lib/utils/getNextNonSharedLineCommentNode.js' {
  declare module.exports: $Exports<'stylelint/lib/utils/getNextNonSharedLineCommentNode'>;
}
declare module 'stylelint/lib/utils/getOsEol.js' {
  declare module.exports: $Exports<'stylelint/lib/utils/getOsEol'>;
}
declare module 'stylelint/lib/utils/getPreviousNonSharedLineCommentNode.js' {
  declare module.exports: $Exports<'stylelint/lib/utils/getPreviousNonSharedLineCommentNode'>;
}
declare module 'stylelint/lib/utils/getRuleSelector.js' {
  declare module.exports: $Exports<'stylelint/lib/utils/getRuleSelector'>;
}
declare module 'stylelint/lib/utils/getSchemeFromUrl.js' {
  declare module.exports: $Exports<'stylelint/lib/utils/getSchemeFromUrl'>;
}
declare module 'stylelint/lib/utils/getStdin.js' {
  declare module.exports: $Exports<'stylelint/lib/utils/getStdin'>;
}
declare module 'stylelint/lib/utils/getStylelintRule.js' {
  declare module.exports: $Exports<'stylelint/lib/utils/getStylelintRule'>;
}
declare module 'stylelint/lib/utils/hasBlock.js' {
  declare module.exports: $Exports<'stylelint/lib/utils/hasBlock'>;
}
declare module 'stylelint/lib/utils/hasEmptyBlock.js' {
  declare module.exports: $Exports<'stylelint/lib/utils/hasEmptyBlock'>;
}
declare module 'stylelint/lib/utils/hasEmptyLine.js' {
  declare module.exports: $Exports<'stylelint/lib/utils/hasEmptyLine'>;
}
declare module 'stylelint/lib/utils/hash.js' {
  declare module.exports: $Exports<'stylelint/lib/utils/hash'>;
}
declare module 'stylelint/lib/utils/hasInterpolation.js' {
  declare module.exports: $Exports<'stylelint/lib/utils/hasInterpolation'>;
}
declare module 'stylelint/lib/utils/hasLessInterpolation.js' {
  declare module.exports: $Exports<'stylelint/lib/utils/hasLessInterpolation'>;
}
declare module 'stylelint/lib/utils/hasPsvInterpolation.js' {
  declare module.exports: $Exports<'stylelint/lib/utils/hasPsvInterpolation'>;
}
declare module 'stylelint/lib/utils/hasScssInterpolation.js' {
  declare module.exports: $Exports<'stylelint/lib/utils/hasScssInterpolation'>;
}
declare module 'stylelint/lib/utils/hasTplInterpolation.js' {
  declare module.exports: $Exports<'stylelint/lib/utils/hasTplInterpolation'>;
}
declare module 'stylelint/lib/utils/isAfterComment.js' {
  declare module.exports: $Exports<'stylelint/lib/utils/isAfterComment'>;
}
declare module 'stylelint/lib/utils/isAfterSingleLineComment.js' {
  declare module.exports: $Exports<'stylelint/lib/utils/isAfterSingleLineComment'>;
}
declare module 'stylelint/lib/utils/isAfterStandardPropertyDeclaration.js' {
  declare module.exports: $Exports<'stylelint/lib/utils/isAfterStandardPropertyDeclaration'>;
}
declare module 'stylelint/lib/utils/isAutoprefixable.js' {
  declare module.exports: $Exports<'stylelint/lib/utils/isAutoprefixable'>;
}
declare module 'stylelint/lib/utils/isBlocklessAtRuleAfterBlocklessAtRule.js' {
  declare module.exports: $Exports<'stylelint/lib/utils/isBlocklessAtRuleAfterBlocklessAtRule'>;
}
declare module 'stylelint/lib/utils/isBlocklessAtRuleAfterSameNameBlocklessAtRule.js' {
  declare module.exports: $Exports<'stylelint/lib/utils/isBlocklessAtRuleAfterSameNameBlocklessAtRule'>;
}
declare module 'stylelint/lib/utils/isContextFunctionalPseudoClass.js' {
  declare module.exports: $Exports<'stylelint/lib/utils/isContextFunctionalPseudoClass'>;
}
declare module 'stylelint/lib/utils/isCounterIncrementCustomIdentValue.js' {
  declare module.exports: $Exports<'stylelint/lib/utils/isCounterIncrementCustomIdentValue'>;
}
declare module 'stylelint/lib/utils/isCounterResetCustomIdentValue.js' {
  declare module.exports: $Exports<'stylelint/lib/utils/isCounterResetCustomIdentValue'>;
}
declare module 'stylelint/lib/utils/isCustomElement.js' {
  declare module.exports: $Exports<'stylelint/lib/utils/isCustomElement'>;
}
declare module 'stylelint/lib/utils/isCustomFunction.js' {
  declare module.exports: $Exports<'stylelint/lib/utils/isCustomFunction'>;
}
declare module 'stylelint/lib/utils/isCustomMediaQuery.js' {
  declare module.exports: $Exports<'stylelint/lib/utils/isCustomMediaQuery'>;
}
declare module 'stylelint/lib/utils/isCustomProperty.js' {
  declare module.exports: $Exports<'stylelint/lib/utils/isCustomProperty'>;
}
declare module 'stylelint/lib/utils/isCustomSelector.js' {
  declare module.exports: $Exports<'stylelint/lib/utils/isCustomSelector'>;
}
declare module 'stylelint/lib/utils/isFirstNested.js' {
  declare module.exports: $Exports<'stylelint/lib/utils/isFirstNested'>;
}
declare module 'stylelint/lib/utils/isFirstNodeOfRoot.js' {
  declare module.exports: $Exports<'stylelint/lib/utils/isFirstNodeOfRoot'>;
}
declare module 'stylelint/lib/utils/isKeyframeRule.js' {
  declare module.exports: $Exports<'stylelint/lib/utils/isKeyframeRule'>;
}
declare module 'stylelint/lib/utils/isKeyframeSelector.js' {
  declare module.exports: $Exports<'stylelint/lib/utils/isKeyframeSelector'>;
}
declare module 'stylelint/lib/utils/isLessVariable.js' {
  declare module.exports: $Exports<'stylelint/lib/utils/isLessVariable'>;
}
declare module 'stylelint/lib/utils/isMathFunction.js' {
  declare module.exports: $Exports<'stylelint/lib/utils/isMathFunction'>;
}
declare module 'stylelint/lib/utils/isNonNegativeInteger.js' {
  declare module.exports: $Exports<'stylelint/lib/utils/isNonNegativeInteger'>;
}
declare module 'stylelint/lib/utils/isNumbery.js' {
  declare module.exports: $Exports<'stylelint/lib/utils/isNumbery'>;
}
declare module 'stylelint/lib/utils/isOnlyWhitespace.js' {
  declare module.exports: $Exports<'stylelint/lib/utils/isOnlyWhitespace'>;
}
declare module 'stylelint/lib/utils/isPathNotFoundError.js' {
  declare module.exports: $Exports<'stylelint/lib/utils/isPathNotFoundError'>;
}
declare module 'stylelint/lib/utils/isRangeContextMediaFeature.js' {
  declare module.exports: $Exports<'stylelint/lib/utils/isRangeContextMediaFeature'>;
}
declare module 'stylelint/lib/utils/isScssVariable.js' {
  declare module.exports: $Exports<'stylelint/lib/utils/isScssVariable'>;
}
declare module 'stylelint/lib/utils/isSharedLineComment.js' {
  declare module.exports: $Exports<'stylelint/lib/utils/isSharedLineComment'>;
}
declare module 'stylelint/lib/utils/isSingleLineString.js' {
  declare module.exports: $Exports<'stylelint/lib/utils/isSingleLineString'>;
}
declare module 'stylelint/lib/utils/isStandardSyntaxAtRule.js' {
  declare module.exports: $Exports<'stylelint/lib/utils/isStandardSyntaxAtRule'>;
}
declare module 'stylelint/lib/utils/isStandardSyntaxColorFunction.js' {
  declare module.exports: $Exports<'stylelint/lib/utils/isStandardSyntaxColorFunction'>;
}
declare module 'stylelint/lib/utils/isStandardSyntaxCombinator.js' {
  declare module.exports: $Exports<'stylelint/lib/utils/isStandardSyntaxCombinator'>;
}
declare module 'stylelint/lib/utils/isStandardSyntaxComment.js' {
  declare module.exports: $Exports<'stylelint/lib/utils/isStandardSyntaxComment'>;
}
declare module 'stylelint/lib/utils/isStandardSyntaxDeclaration.js' {
  declare module.exports: $Exports<'stylelint/lib/utils/isStandardSyntaxDeclaration'>;
}
declare module 'stylelint/lib/utils/isStandardSyntaxFunction.js' {
  declare module.exports: $Exports<'stylelint/lib/utils/isStandardSyntaxFunction'>;
}
declare module 'stylelint/lib/utils/isStandardSyntaxHexColor.js' {
  declare module.exports: $Exports<'stylelint/lib/utils/isStandardSyntaxHexColor'>;
}
declare module 'stylelint/lib/utils/isStandardSyntaxKeyframesName.js' {
  declare module.exports: $Exports<'stylelint/lib/utils/isStandardSyntaxKeyframesName'>;
}
declare module 'stylelint/lib/utils/isStandardSyntaxMathFunction.js' {
  declare module.exports: $Exports<'stylelint/lib/utils/isStandardSyntaxMathFunction'>;
}
declare module 'stylelint/lib/utils/isStandardSyntaxMediaFeature.js' {
  declare module.exports: $Exports<'stylelint/lib/utils/isStandardSyntaxMediaFeature'>;
}
declare module 'stylelint/lib/utils/isStandardSyntaxMediaFeatureName.js' {
  declare module.exports: $Exports<'stylelint/lib/utils/isStandardSyntaxMediaFeatureName'>;
}
declare module 'stylelint/lib/utils/isStandardSyntaxProperty.js' {
  declare module.exports: $Exports<'stylelint/lib/utils/isStandardSyntaxProperty'>;
}
declare module 'stylelint/lib/utils/isStandardSyntaxRule.js' {
  declare module.exports: $Exports<'stylelint/lib/utils/isStandardSyntaxRule'>;
}
declare module 'stylelint/lib/utils/isStandardSyntaxSelector.js' {
  declare module.exports: $Exports<'stylelint/lib/utils/isStandardSyntaxSelector'>;
}
declare module 'stylelint/lib/utils/isStandardSyntaxTypeSelector.js' {
  declare module.exports: $Exports<'stylelint/lib/utils/isStandardSyntaxTypeSelector'>;
}
declare module 'stylelint/lib/utils/isStandardSyntaxUrl.js' {
  declare module.exports: $Exports<'stylelint/lib/utils/isStandardSyntaxUrl'>;
}
declare module 'stylelint/lib/utils/isStandardSyntaxValue.js' {
  declare module.exports: $Exports<'stylelint/lib/utils/isStandardSyntaxValue'>;
}
declare module 'stylelint/lib/utils/isValidFontSize.js' {
  declare module.exports: $Exports<'stylelint/lib/utils/isValidFontSize'>;
}
declare module 'stylelint/lib/utils/isValidHex.js' {
  declare module.exports: $Exports<'stylelint/lib/utils/isValidHex'>;
}
declare module 'stylelint/lib/utils/isVariable.js' {
  declare module.exports: $Exports<'stylelint/lib/utils/isVariable'>;
}
declare module 'stylelint/lib/utils/isWhitespace.js' {
  declare module.exports: $Exports<'stylelint/lib/utils/isWhitespace'>;
}
declare module 'stylelint/lib/utils/matchesStringOrRegExp.js' {
  declare module.exports: $Exports<'stylelint/lib/utils/matchesStringOrRegExp'>;
}
declare module 'stylelint/lib/utils/nextNonCommentNode.js' {
  declare module.exports: $Exports<'stylelint/lib/utils/nextNonCommentNode'>;
}
declare module 'stylelint/lib/utils/nodeContextLookup.js' {
  declare module.exports: $Exports<'stylelint/lib/utils/nodeContextLookup'>;
}
declare module 'stylelint/lib/utils/noFilesFoundError.js' {
  declare module.exports: $Exports<'stylelint/lib/utils/noFilesFoundError'>;
}
declare module 'stylelint/lib/utils/optionsMatches.js' {
  declare module.exports: $Exports<'stylelint/lib/utils/optionsMatches'>;
}
declare module 'stylelint/lib/utils/parseSelector.js' {
  declare module.exports: $Exports<'stylelint/lib/utils/parseSelector'>;
}
declare module 'stylelint/lib/utils/pluralize.js' {
  declare module.exports: $Exports<'stylelint/lib/utils/pluralize'>;
}
declare module 'stylelint/lib/utils/putIfAbsent.js' {
  declare module.exports: $Exports<'stylelint/lib/utils/putIfAbsent'>;
}
declare module 'stylelint/lib/utils/rawNodeString.js' {
  declare module.exports: $Exports<'stylelint/lib/utils/rawNodeString'>;
}
declare module 'stylelint/lib/utils/removeEmptyLinesAfter.js' {
  declare module.exports: $Exports<'stylelint/lib/utils/removeEmptyLinesAfter'>;
}
declare module 'stylelint/lib/utils/removeEmptyLinesBefore.js' {
  declare module.exports: $Exports<'stylelint/lib/utils/removeEmptyLinesBefore'>;
}
declare module 'stylelint/lib/utils/report.js' {
  declare module.exports: $Exports<'stylelint/lib/utils/report'>;
}
declare module 'stylelint/lib/utils/ruleMessages.js' {
  declare module.exports: $Exports<'stylelint/lib/utils/ruleMessages'>;
}
declare module 'stylelint/lib/utils/setAtRuleParams.js' {
  declare module.exports: $Exports<'stylelint/lib/utils/setAtRuleParams'>;
}
declare module 'stylelint/lib/utils/setDeclarationValue.js' {
  declare module.exports: $Exports<'stylelint/lib/utils/setDeclarationValue'>;
}
declare module 'stylelint/lib/utils/stylelintCommand.js' {
  declare module.exports: $Exports<'stylelint/lib/utils/stylelintCommand'>;
}
declare module 'stylelint/lib/utils/transformSelector.js' {
  declare module.exports: $Exports<'stylelint/lib/utils/transformSelector'>;
}
declare module 'stylelint/lib/utils/typeGuards.js' {
  declare module.exports: $Exports<'stylelint/lib/utils/typeGuards'>;
}
declare module 'stylelint/lib/utils/uniteSets.js' {
  declare module.exports: $Exports<'stylelint/lib/utils/uniteSets'>;
}
declare module 'stylelint/lib/utils/validateObjectWithArrayProps.js' {
  declare module.exports: $Exports<'stylelint/lib/utils/validateObjectWithArrayProps'>;
}
declare module 'stylelint/lib/utils/validateObjectWithProps.js' {
  declare module.exports: $Exports<'stylelint/lib/utils/validateObjectWithProps'>;
}
declare module 'stylelint/lib/utils/validateOptions.js' {
  declare module.exports: $Exports<'stylelint/lib/utils/validateOptions'>;
}
declare module 'stylelint/lib/utils/validateTypes.js' {
  declare module.exports: $Exports<'stylelint/lib/utils/validateTypes'>;
}
declare module 'stylelint/lib/utils/vendor.js' {
  declare module.exports: $Exports<'stylelint/lib/utils/vendor'>;
}
declare module 'stylelint/lib/utils/whitespaceChecker.js' {
  declare module.exports: $Exports<'stylelint/lib/utils/whitespaceChecker'>;
}
declare module 'stylelint/lib/validateDisableSettings.js' {
  declare module.exports: $Exports<'stylelint/lib/validateDisableSettings'>;
}
declare module 'stylelint/lib/writeOutputFile.js' {
  declare module.exports: $Exports<'stylelint/lib/writeOutputFile'>;
}
